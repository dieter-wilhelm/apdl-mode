#+STARTUP: all
#+DATE: Time-stamp: <2020-02-24>
#+bind: org-html-preamble-format (("en" "%d"))
# #+OPTIONS: H:1 texht:t
# #+BEAMER_COLOR_THEME:
# #+BEAMER_FONT_THEME:
# #+BEAMER_HEADER:
# #+BEAMER_INNER_THEME:
# #+BEAMER_OUTER_THEME:
# #+BEAMER_THEME: default
# #+LATEX_CLASS: beamer
# #+LATEX_CLASS_OPTIONS:
# #+LATEX_HEADER:
# #+LATEX_HEADER_EXTRA:

#+TITLE: Introductory Tutorial for APDL-Mode
#+BEAMER_HEADER: \subtitle{A GNU Emacs programming mode for the APDL language, version 20.2.0}
#+AUTHOR:    H. Dieter Wilhelm
#+EMAIL:     dieter@duenenhof-wilhelm.de
# #+TEXT: blabla
#+DESCRIPTION: *APDL-Mode* for GNU Emacs, an introductory *Tutorial* GNU Emacs Editor support for working with ANSYS FEA.
#+KEYWORDS: Emacs ANSYS FEA APDL
#+LANGUAGE:  en
#+OPTIONS:   H:2 num:nil toc:nil \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t email:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+LaTeX_CLASS: A-M
#+LaTeX_CLASS_OPTIONS: [presentation,colorlinks,t]
#+LATEX_HEADER: \usepackage{textcomp}
# #+BEAMER_HEADER_EXTRA: \usepackage{hyperref}
# #+BEAMER_HEADER_EXTRA: \usepackage{pdfcomment}
#+BEAMER_HEADER: \beamertemplatenavigationsymbolsempty
#+BEAMER_HEADER: \setbeamertemplate{footline}[frame number]
#+BEAMER_HEADER: \titlegraphic{\includegraphics[width=5cm]{ansys+emacs2020.png}}
#+BEAMER_FRAME_LEVEL: 2
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+HTML_LINK_HOME: https://github.com/dieter-wilhelm/ansys-mode
#+HTML_LINK_UP: ../index.html
#+STYLE: <link rel="icon" href="../../gnu.ico" type="image/x-icon"/>
#+STYLE: <link rel="shortcut icon" href="../../gnu.ico" type="image/x-icon"/>
#+XSLT:
# #+TEXT: Copyright (C) 2006 - 2020  H. Dieter Wilhelm, GPL V3

#+HTML: <img src="ansys+emacs2020.png" height=150 alt="image">

# the text and arrows (line width 4) in the drawings are done with inkscape
# okular and acroread support PDF annotations, xpdf, Chrome and Evince not

* Introduction
** Introducing APDL-Mode -- an APDL environment
   [[https://github.com/dieter-wilhelm/apdl-mode][This project]] supports your APDL workflows with the FEA suite [[http://www.ansys.com][ANSYS]].
# #+BEGIN_export LaTeX
# \pdfannot % generic annotation
# % width 4cm % the dimension of the annotation can be controlled
# % height 0cm % via <rule spec>; if some of dimensions in
# % depth 4cm % <rule spec> is not given, the corresponding
# % value of the parent box will be used.
# { %
# /Subtype /Text % text annotation
# /Author (H. Dieter Wilhelm) %
# /T (H. Dieter Wilhelm: Acronyms)
# % /Open true % if given then the text annotation will be opened
# /Contents % text contents
# (APDL = Ansys Parametric Design Language)
# }%\hspace{.4cm}%
# \quad%
# #+END_export
#   workflows with the FEA suite [[http://www.ansys.com][ANSYS]].

# #+BEGIN_export LaTeX
# \pdfannot % generic annotation
# % width 4cm % the dimension of the annotation can be controlled
# % height 0cm % via <rule spec>; if some of dimensions in
# % depth 4cm % <rule spec> is not given, the corresponding
# % value of the parent box will be used.
# { %
# /Subtype /Text % text annotation
# /Author (H. Dieter Wilhelm) %
# /T (H. Dieter Wilhelm: Acronyms)
# % /Open true % if given then the text annotation will be opened
# /Contents % text contents
# (FEA = Finite Element Analysis)
# }%\hspace{.4cm}%
# \quad%
# #+END_export
# suite [[http://www.ansys.com][ANSYS]].

# #+BEGIN_export LaTeX
# \pdfannot % generic annotation
# % width 4cm % the dimension of the annotation can be controlled
# % height 0cm % via <rule spec>; if some of dimensions in
# % depth 4cm % <rule spec> is not given, the corresponding
# % value of the parent box will be used.
# { %
# /Subtype /Text % text annotation
# /Author (H. Dieter Wilhelm) %
# /T (H. Dieter Wilhelm: Acronyms)
# % /Opepn true % if given then the text annotation will be opened
# /Contents % text contents
# (ANSYS = ANalysis SYStem, registered TM)
# }%
# #+END_export

#+LaTeX: \\[.2cm]
#+HTML: <br>
   It provides an editor mode for [[http://www.gnu.org/software/emacs/][GNU Emacs]] for investigating and
   coding APDL.  The mode offers also managing and communication
   capabilities for various ANSYS processes, like interactive code
   debugging with the solver or inquiring the license manager status,
   etc.  Some features are quite sophisticated but its documentation
   is accessible for ANSYS users with little APDL and [[http://en.wikipedia.org/wiki/Emacs][Emacs]]
   experience.
# #+BEGIN_export LaTeX
# \pdfannot % generic annotation
# % width 4cm % the dimension of the annotation can be controlled
# % height 0cm % via <rule spec>; if some of dimensions in
# % depth 4cm % <rule spec> is not given, the corresponding
# % value of the parent box will be used.
# { %
# /Subtype /Text % text annotation
# /Author (H. Dieter Wilhelm) %
# /T (H. Dieter Wilhelm: Acronyms)
# % /Opepn true % if given then the text annotation will be opened
# /Contents % text contents
# (Emacs originally EMACS = Editing MACroS, approx. 1976)
# }\quad%
# #+END_export
#    experience.
#+LaTeX: \\[.2cm]
#+HTML: <br>
#   [[http://www.gnu.org/home.en.html][GNU]]
# #+BEGIN_export latex
# \pdfannot % generic annotation
# % width 4cm % the dimension of the annotation can be controlled
# % height 0cm % via <rule spec>; if some of dimensions in
# % depth 4cm % <rule spec> is not given, the corresponding
# % value of the parent box will be used.
# { %
# /Subtype /Text % text annotation
# %/Author (H. Dieter Wilhelm) %
# /T (H. Dieter Wilhelm: Acronyms)
# %/Open true % if given then the text annotation will be opened
# /Contents % text contents
# (GNU = Gnu's Not Unix, a free and open software collection)
# }%\hspace{.4cm}%
# \quad
# #+END_export
  [[http://www.gnu.org/home.en.html][GNU]]-Emacs is an modern, powerful and extensible - yet free -
  editor. High quality software available for every operating system
  where ANSYS is running.

* Download and Installation
** Download GNU-Emacs and the APDL-Mode Tar Package
   There are no costs and no usage restrictions even in commercial
   application.  Please download [[https://www.gnu.org/software/emacs/][GNU Emacs]] and the latest APDL-Mode
   tar file from the [[https://github.com/dieter-wilhelm/apdl-mode/releases][APDL-Mode's releases page]].
   #+latex: \\[.25cm]

# #+ATTR_HTML: width="900"
#+BEGIN_EXPORT latex
\href{https://github.com}{%
  \includegraphics[width=9cm]{./github.png}%
}\\[.25cm]
#+END_EXPORT
#+HTML: <img src="./github.png" alt="Download page from GitHub">
Install APDL-Mode from Emacs: Please type: ~M-x
package-install-file <RET>~ and select the downloaded tar archive.
#   #+latex: \\[.5cm]

* COMMENT Installation
** Install APDL-Mode in GNU Emacs


# #+ATTR_LaTeX: :width 11cm
#   [[./emacs_bin_folder.png]]

#  In this list /runemacs.exe/ is the actual editor executable.

* Usage
** Open an Emacs buffer under APDL-Mode
  # Start the editor and open /doc/example.mac/ or any other APDL file
  # (with the extensions /mac/, /ans/, /inp/, /dat/ or /anf/, otherwise
  # type *M-x apdl* and <RET>).

  Please type: ~M-x apdl <RET>~

#+LaTeX: \\[.4cm]
#+HTML: <br>
   In the following *C-c* or e. g. *M-c* means typing the <CTRL> or <ALT>
   key together with the `c' key.


# #+ATTR_LaTeX: :height 7.5cm
#   [[./find_file_dialog.png]]

** Explore the APDL-Mode menus
  If ANSYS is installed in its default folders, also system dependent
  functions, like browsing the APDL help with *C-c C-b*, are working.
  Otherwise, you can easily configure this. The former is *much*
  faster as searching with the original ANSYS Help Viewer.

#+ATTR_LaTeX: :height 7.5cm
 [[./ansys_menu.png]]

* Selected APDL-Mode Features
** Easily inspect WorkBench solver files (/doc/example.dat/)
   APDL-Mode hides the normally uninteresting but usually very large
   number blocks.  On the right hand side is the unhidden content.  If
   APDL-Mode is not yet configured for /.dat/ files please type:
   #+begin_src elisp :exports code
   M-x apdl-mode
   #+end_src
*** Col left                                                          :BMCOL:
   :PROPERTIES:
   :BEAMER_col: 0.6
   :END:
   #+ATTR_LaTeX: :height 7.5cm
  [[./hidden_blocks.png]]
*** Col right                                                         :BMCOL:
   :PROPERTIES:
   :BEAMER_col: 0.45
   :END:
   #+ATTR_LaTeX: :height 7.5cm
  [[./unhidden_blocks.png]]

** COMMENT Use the APDL-Mode APDL command help
  Please type *M-?*, alternatively: *C-c ?*, on a code line and you
  will see the APDL command's description and number of parameters
  (even when the line is commented out).  You can continue editing,
  this temporary overlay - here in green - remains visible for a while.

#+ATTR_LaTeX: :height 7.5cm
[[./parameter_help.png]]

** Check your cursor position in the parameter list
  For commands with a large number of arguments it is cumbersome to
  count the arguments, *C-?* facilitates this for you and visualises
  dynamically at which parameter position the cursor currently is.

#+ATTR_LaTeX: :height 7.5cm
[[./parameter_help2.png]]

** Select and insert templates from the menu into your code
   Screenshot with the ANSYS Classics GUI on the left and Emacs on the
   right on Win64

#+ATTR_LaTeX: :height 8cm
#+ATTR_HTML: :width "1200"
   [[./template_menu.png]]

** Preview the extensible APDL code templates
   Before inserting an entire template you are able to inspect its
   content in a preview window (*C-c C-s*) and might just copy the
   most relevant snippets, please see below and next slide.

#+ATTR_LaTeX: :height 7.5cm
   [[./template.png]]

** Select an interesting template from a completion window
   Type *C-c C-s* to choose a template name, use the <TAB> key to
   complete or to open the completion window of available items.

#+ATTR_LaTeX: :height 7.5cm
   [[./template_selection.png]]

** Check auto-insertion and outline your code (tree view)
  Create a new APDL file with the suffix
#+BEGIN_LaTeX
`{\sl .mac}'
#+END_LaTeX
  and let Emacs auto-insert
  a skeleton with `outline' headings.  Collapse the content to a tree
  view with *C-c @ C-t* and open all (*C-c @ C-a*) again.

#+ATTR_LaTeX: :height 7.5cm
  [[./outline.png]]

** Utilise completions of all -- around 2000 -- APDL symbols
  Move the cursor behind a character - here `c' - or word fragment and
  type <ESC> <TAB> or *C-M-i* for completing up to date APDL command-,
  element- and function names.

#+ATTR_LaTeX: :height 7.5cm
  [[./completion.png]]

** Open a summary window of your APDL variables
  Type *C-c C-v* to receive a summary window of all your variable
  definitions. With an argument (*C-u C-c C-v*) you will get the
  current value of your variable at the cursor (Linux only, right).

#+ATTR_LaTeX: :height 7cm
  [[./variable_buffer.png]]
#+ATTR_LaTeX: :height 7cm
  [[file:variable_status.png]]
# #+BEGIN_LaTeX
# \href{http://www.gnu.org/software/emacs/tour/}{%
#   \includegraphics[width=5cm]{./tour_of_Emacs.png}%
# }
# #+END_LaTeX
# #+HTML: <img src="./tour_of_Emacs.png" alt="download page from Google Code">

** Structure your variable assignments
  Move the cursor to a variable definition paragraph or mark, here in
  yellow, some definitions and type *C-c C-a* to align them.

#+ATTR_LaTeX: :height 7.5cm
  [[./alignment.png]]

** Use the Emacs integrated, programmable RPN calculator
   Type ~C-x * *~ to open the calculator, type ~y~ for pasting results
   directly into the APDL file.  And ~q~ to quit the `Calc' windows.
#+ATTR_LaTeX: :height 7cm
  [[./calculator.png]]
** Display the license status and preview images
   In Emacs' lower-half you see the license status (*C-c C-l*).  All
   described features can be executed through the APDL-Mode menu or
   with keyboard shortcuts.

#+ATTR_LaTeX: :height 7.3cm
#+ATTR_HTML: :width "1200"
   [[./license.png]]

** Debug your code interactively with the solver ([[http://www.gnu.org/gnu/why-gnu-linux.html][GNU-Linux]])
   You can run the ANSYS solver under Emacs and send code lines from
   above APDL window with *C-c C-j* (*C-c C-c* for whole regions)
   directly to this process. Below you see the *interactive* solver
   output and on the left hand side the corresponding ANSYS images.

#+ATTR_HTML: :width "1200"
#+ATTR_LaTeX: :height 6.5cm
  [[./process.png]]

** Arrange the APDL-Mode windows to your needs
   The image shows an Emacs 23.2 frame (in reversed colour mode and compiled with the GTK+ toolkit under GNU-Linux) with a ripped off APDL-Mode menu field

# The
# APDL file is in the right window with the (experimental) user variable
# highlighting switched on and a help overlay (in yellow background)
# activated. The smaller windows on the left hand side are showing the
# `Variable definitions buffer' of the same file and a preview buffer of
# a certain code template, respectively.

   file:ansys-mode.jpg

* Configuration
** Configure system dependent aspects and user options
#   \\Mainly the ANSYS version and its installation directory
   Please check the mode settings with Emacs'
    customisation system (no programming necessary) use the menu and
*** modify settings with Emacs' customisation system
	  :PROPERTIES:
	  :BEAMER_env: block
	  :BEAMER_envargs: <2->
	  :BEAMER_envargs: C[T]
	  :BEAMER_col: 0.5
	  :END:
#+ATTR_LaTeX: :width 5.5cm
    [[./customisation_system.png]]

  ... and reload APDL-Mode.
*** or check the well commented file /ansys-config.el/
	  :PROPERTIES:
	  :BEAMER_env: block
	  :BEAMER_envargs: C[T]
	  :BEAMER_col: 0.5
	  :END:
#+ATTR_LaTeX: :width 5.5cm
  [[./ansys-config.png]]

  ... and restart Emacs.
* Documentation and Licensing
** Get to know Emacs and its excellent documentation
  Newcomers to Emacs should take the [[http://www.gnu.org/software/emacs/tour/][guided online tour]] to
  get a background of its capabilities and fire up the interactive
  tutorial (*C-h t*) which is translated to various languages.

#+ATTR_LaTeX: :height 7.5cm
  [[./emacs_tutorial.png]]
# #+ATTR_LaTeX: width=5cm
#+BEGIN_LaTeX
\href{http://www.gnu.org/software/emacs/tour/}{%
  \includegraphics[width=5cm]{./tour_of_Emacs.png}%
}
#+END_LaTeX
#+HTML: <img src="./tour_of_Emacs.png" alt="download page from Google Code">

** Use the APDL-Mode built-in help
   Please type *C-h m* to open the mode help, especially for
   APDL-Mode's usage and keybindings.  At the beginning is also a
   brief introduction of basic Emacs concepts.

#+ATTR_LaTeX: :height 7.5cm
   [[./mode_help.png]]

** You might read further APDL-Mode documentation

# *** Licensing and costs:
   - Licensing and costs: :: This is free and open software, there are
	*no costs* and effectively *no restrictions* for you using
	Emacs and APDL-Mode even commerically.  Both are under the
	[[http://www.gnu.org/licenses/gpl-3.0.en.html][GPL, the Gnu Puplic License]] copied in the /LICENSE.org/ file.
# # ATTENTION: \pdfannot does not work in this environment!!!!
# *** Installation:
   - Installation: :: More detailed instructions are necessary if you
                      are not using the mode bundled with Emacs.
                      Please have a look in the /INSTALLATION.org/
                      file.  The online documentation is at
                      [[http://dieter-wilhelm.github.io/ansys-mode/][APDL-Modes's documentation site]].
# *** Hands-on tutorial and reference:
   - Hands-on tutorial and reference: :: You will find these
	in-depth documentation included in the mode's archives on
	[[https://github.com/dieter-wilhelm/ansys-mode/releases][GitHub's releases page]] or read [[http://dieter-wilhelm.github.io/ansys-mode/][online]].
# *** News and project history:
   - News and project history: :: They are placed in the mode's
	accompanying /NEWS.org/ file

* Help and Bugs
** Search for help, report bugs and issues
  Besides the documentation, have a look in the [[https://github.com/dieter-wilhelm/ansys-mode/issues][GitHub's issues site]]
  or send an [[mailto:dieter@duenenhof-wilhelm.de][email to the maintainer]].  Please use the APDL-Mode bug
  report functionality, which might provide helpful status
  information.

#+ATTR_LaTeX: :height 7.5cm
  [[./bug_report.png]]

* Summary
** Use APDL-Mode appropriate to your needs
**** The relevance of APDL remains: `WorkBench' and `AIM' operate *exclusively* the ANSYS solver with it!  For a *true understanding* the study of APDL is *prerequisite*.   Furthermore, code APDL only for *repetitive* tasks or WB/AIM snippets.
*** Basic APDL *Viewer*
	 :PROPERTIES:
	 :BEAMER_env: block
	 :BEAMER_envargs: C[t]
#         :BEAMER_col: 0.5
	 :END:
    Navigating in WB solver input files, discerning relevant
    information through highlighting, quickly analysing APDL commands
    with the built-in help or pin-pointing the reference help in a
    browser.
*** Earnest APDL *Editor*
	 :PROPERTIES:
	 :BEAMER_env: block
	 :BEAMER_envargs: C[t]
#         :BEAMER_col: 0.5
	 :END:
    Specific shortcut keybindings, outlining, code templates,
    completions, auto-indentation, abbreviations, auto-insertion.
*** Advanced APDL *Environment*
	 :PROPERTIES:
	 :BEAMER_env: block
	 :BEAMER_envargs: C[t]
#         :BEAMER_col: 0.5
	 :END:
    Solver communication/feedback - hybrid between coding and
    debugging (GNU-Linux only), retrieving license states, error file
    viewing, abort file handling, extending APDL templates, ...
** Last slide of the APDL-Mode tutorial
***  Hint for the curious:
	 :PROPERTIES:
	 :BEAMER_env: block
 #        :BEAMER_envargs: <1>
	 :BEAMER_envargs: C[c]
	 :BEAMER_col: 0.5
	 :END:

# #+ATTR_LaTeX: width=5.5cm
# #   ,angle=90
#+BEGIN_LaTeX
\href{http://shop.oreilly.com/product/9780596006488.do}{%
  \includegraphics[width=5.5cm]{./gnu_emacs.png}%
}
#+END_LaTeX
#+HTML: <img src="./gnu_emacs.png" alt="download page from Google Code">

*** Thank you for your time getting acquainted with APDL-Mode and Emacs!
	 :PROPERTIES:
	 :BEAMER_env: block
	 :BEAMER_envargs: <2>
	 :BEAMER_envargs: C[t]
	 :BEAMER_col: 0.5
	 :END:

#+BEGIN_LaTeX
\vspace{.2cm}
#+END_LaTeX
[[http://www.gnu.org/fun/jokes/gnuemacs.acro.exp.html][Have fun...]]
#+BEGIN_LaTeX
\vspace{.4cm}
#+END_LaTeX

#+ATTR_LaTeX: :width 6cm
[[./editor_learning_curves.jpg]]
-----
# LOCAL variables:
# word-wrap: t
# show-trailing-whitespace: t
# indicate-empty-lines: t
# time-stamp-active: t
# time-stamp-format: "%:y-%02m-%02d"
# end:
