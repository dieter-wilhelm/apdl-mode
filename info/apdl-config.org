
#+DATE: Time-stamp: <2021-08-30>
#+bind: org-html-preamble-format (("en" "%d"))
#+OPTIONS: ':nil *:t -:t ::t <:t H:3 \n:nil ^:{} arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not "LOGBOOK") date:t
#+OPTIONS: e:t email:t f:t inline:t num:t p:nil pri:nil prop:nil
#+OPTIONS: stat:t tags:t tasks:t tex:t timestamp:t toc:1 todo:t |:t
#+AUTHOR: H. Dieter Wilhelm
#+EMAIL: dieter@duenenhof-wilhelm.de
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+OPTIONS: html-link-use-abs-url:nil html-postamble:t html-preamble:t
#+OPTIONS: html-scripts:t html-style:t html5-fancy:nil tex:t
#+HTML_DOCTYPE: xhtml-strict
#+HTML_CONTAINER: div
#+HTML_LINK_HOME: https://github.com/dieter-wilhelm/apdl-mode
#+HTML_LINK_UP: ../index.html
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+HTML_MATHJAX:
#+INFOJS_OPT:
#+LATEX_HEADER:
# #+TITLE: Configuration and Customisation of APDL-Mode
#+text: Copyright (C) 2016 - 2021, H. Dieter Wilhelm, GPL V3

#+cindex: Configuration
#+cindex: Configure APDL-Mode
#+cindex: Customisation
#+cindex: Customise APDL-Mode

Most functionality of APDL-Mode is working without additional
configurations.  APDL-Mode is intelligent enough to figure out Ansys
installation dependent paths.  For regular Ansys installations, it
chooses by default the highest installed Ansys version on your system.

APDL-Mode configures GNU-Emacs to open all files with the suffixes
".mac", ".dat" and ".inp" under apdl-mode.

You can change the APDL-Mode confgurations permanently by 1. using the
Emacs customistation system
#+texinfo: @inforef{Easy Customization,,emacs}
or 2. by directly manipulating the Emacs configuration file
#+texinfo: @inforef{Init File,,emacs}.


  1. For an overview of available APDL-Mode customisations variables
     it’s easiest to open the APDL-Mode’s customisation buffer either
     with the command ‘M-x apdl-customise-apdl’ or from the menu bar
     -> ’APDL’ -> ’Customise APDL Mode’ and search for interesting
     options.  Another way of using the customisation facility is to
     open the help of respective variables.  Let’s change for example
     the highlighting level which is stored in the customisation
     variable ‘apdl-highlighting-level’: Open its documentation with
     "C-h v" `apdl-highlighting-level'.  In its help buffer you can
     click on the hyperlink `customize’ at the bottom.  You might set
     a value for this particular variable only for the current session
     or you might add your choices automatically in the Emacs
     configuration file for future sessions.

  2. The following describes editing the Emacs configuration file (for
     example ~/.emacs or ~/.emacs.d/init.el).  These customisations
     are written in `Emacs-Lisp'.  The comment sign in this language
     is ~;~ (one semi-colon `;').

* Conventions
  used in /apdl-config.el/, APDL-Mode's example configuration file.
  Textual hints in /apdl-config.el/ are indicated with TWO semi-colons
  ~;;~, please uncomment only the code lines with a SINGLE comment sign
  and change them when appropriate.

  Please add the interesting code lines into your GNU-Emacs init file
  or load your adjustments of this file with `(load-file
  "PATH/apdl-config.el")' from your init file.

  #+BEGIN_SRC emacs-lisp :tangle yes :exports none
    ;;; apdl-config.el --- Customisation example for APDL-Mode
    ;; This file was built from the file "apdl-config.org".

    ;; Copyright (C) 2016 - 2021 H. Dieter Wilhelm, GPL V3
    ;; Author: H. Dieter Wilhelm <dieter@duenenhof-wilhelm.de>
    ;; Version: 20.6.0
    ;; Package-Requires: ((emacs "25.1"))
    ;; Keywords: languages, convenience, tools, Ansys, APDL
    ;; URL: https://github.com/dieter-wilhelm/apdl-mode

    ;; Maintainer: H. Dieter Wilhelm
    ;; Created: 2006-02

    ;; Parts of this mode were originally base on octave-mod.el: Copyright
    ;; (C) 1997 Free Software Foundation, Inc.  Author: Kurt Hornik
    ;; <Kurt.Hornik@wu-wien.ac.at> Author: John Eaton
    ;; <jwe@bevo.che.wisc.edu>

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; This code is free software; you can redistribute it and/or modify
    ;; it under the terms of the GNU General Public License as published
    ;; by the Free Software Foundation; either version 3, or (at your
    ;; option) any later version.
    ;;
    ;; This lisp script is distributed in the hope that it will be useful,
    ;; but WITHOUT ANY WARRANTY; without even the implied warranty of
    ;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    ;;
    ;; Permission is granted to distribute copies of this lisp script
    ;; provided the copyright notice and this permission are preserved in
    ;; all copies.
    ;;
    ;; You should have received a copy of the GNU General Public License
    ;; along with this program; if not, you can either send email to this
    ;; program's maintainer or write to: The Free Software Foundation,
    ;; Inc.; 675 Massachusetts Avenue; Cambridge, MA 02139, USA.
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ;;; Commentary:
    ;; The customisations itself are written in `Emacs-Lisp'.
    ;; The comment is ~;~ (one semi-colon `;').  Textual hints
    ;; are indicated with DOUBLE semi-colons `;;', optionally uncomment
    ;; the code lines with a SINGLE comment sign.

    ;; Please add the interesting code lines into your GNU-Emacs init file or
    ;; load this file in the init file with `(load-file
    ;; "PATH/apdl-config.el")'.

    ;;; CODE:
  #+END_SRC

* Important Prerequisite
  For using Ansys processes, like getting license informations, the
  Ansys Installation path with version information is necessary.
  APDL-Mode is looking in different places and is using environment
  variables to detect your Asys installation but if you have a non
  default installation it might not be able to find it.  In that case
  please configure your installation path up to and including the
  Ansys versioning number.

  You can change the installation path for the current session with
  the MAPDL menu entry "Change Installation Directory".

   #+BEGIN_SRC emacs-lisp  :tangle yes
  (cond ((string= window-system "x")
	  ;; This condition is an example of an installation directory on GNU-Linux
	  (setq apdl-ansys-install-directory "/appl/ansys_inc/v201/"))
	  ;; the default might look like "/ansys_inc/v201/"
	 (t ;; The default condition is an example of an installation directory on WINDOWS
	  ;; Emacs is using here forward slashes as under Unix and not the backslash "\"!
	  (setq apdl-ansys-install-directory "D:/Ansys Inc/v201/")))
	  ;; default: "C:/Program Files/Ansys Inc/v201/"
   #+END_SRC

   If your Ansys installation differs completely from the standard
   Ansys directory structure, or if you want to use multiple versions of
   Ansys, then please consult the section [[*Installation dependent configurations][Installation dependent configurations]].

** COMMENT Finding APDL-Mode
   If the APDL-Mode files (the files with the suffix /.el/) are *not*
   placed in a default Emacs load path.  Please see the variable
   load-path .

   #+BEGIN_SRC emacs-lisp
   (describe-variable 'load-path)
   #+END_SRC

   Or you can read about the load-path in the Emacs manual:
   #+BEGIN_SRC emacs-lisp
   (info "(emacs)Lisp Libraries")
   #+END_SRC

   Then it is necessary to adjust the following way: Hint: The
   directory site-lisp/ in the Emacs installation tree, for example,
   is in its default load path.

   #+BEGIN_SRC emacs-lisp
   (add-to-list 'load-path "C:\\DIRECTORY-PATH\\WHERE\\THE\\APDL-MODE\\FILES\\RESIDE")
   #+END_SRC
   for example:
   #+BEGIN_SRC emacs-lisp
   (add-to-list 'load-path "c:\\emacs\\apdl-mode")
   #+END_SRC
   for a Windows system or
   #+BEGIN_SRC emacs-lisp
   (add-to-list 'load-path "/usr/local/src/emacs/apdl-mode")
   #+END_SRC
   for a GNU-Linux system.
* File suffixes
  For auto loading APDL-Mode please customise your file suffixes for
  which Ansys mode is automatically called for.
** Macro files
   /.mac/ is the macro suffix of Ansys i. e. these macro files can be
   called in the Ansys command prompt or APDL like a regular Ansys
   function (without the suffix /.mac/).

   APDL-Mode has configured GNU-Emacs to open files with this suffix
   under apdl-mode.  Please check the /example.mac/ file in the /doc/
   folder.

   With the following setting


  #+BEGIN_SRC emacs-lisp :tangle yes
    (add-to-list 'auto-mode-alist '("\\.apdl$" . apdl-mode))
  #+END_SRC

  files with the suffix /.apdl/ will be opended under APDL-Mode.
** WorkBench generated input files
   /.dat/ and /.inp/ are WorkBench's solver input file suffixes.  See
   the file /example.dat/ in the /doc/ folder.

   APDL-Mode has configured GNU-Emacs to open files with these
   suffixes under apdl-mode.

# #+BEGIN_SRC emacs-lisp
#   (add-to-list 'auto-mode-alist '("\\.dat$" . apdl-mode)) ;
#   (add-to-list 'auto-mode-alist '("\\.inp\\'" . apdl-mode))
# #+END_SRC

** The Ansys Neutral file format
   /.anf/ is the suffix for "Ansys Neutral" files which include mostly
   gometric data but also some APDL snippets. These files are used for
   imports, see the file /example.anf/ in the /doc/ folder.

   #+BEGIN_SRC emacs-lisp
   (add-to-list 'auto-mode-alist '("\\.anf$" . apdl-mode))
   #+END_SRC

#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; file suffixes for autoloading of APDL-Mode, appropriate file
  ;; suffixes for which Ansys mode is automatically called for

  ;; .mac is the macro suffix of Ansys i. e. these macros can be called
  ;; in the Ansys command prompt like a regular Ansys function (without
  ;; the suffix .mac).  See the file doc/example.mac

  ;; APDL-Mode has configured GNU-Emacs to open files with this suffix
  ;; under apdl-mode.

  ;; (add-to-list 'auto-mode-alist '("\\.mac$" . apdl-mode))
  (add-to-list 'auto-mode-alist '("\\.ans$" . apdl-mode))

  ;; .dat and .inp are WorkBench's solver input file suffixes
  ;; See the file doc/example.dat

  ;; APDL-Mode has configured GNU-Emacs to open files with these suffixes
  ;; under apdl-mode.

  ;; (add-to-list 'auto-mode-alist '("\\.dat$" . apdl-mode))
  ;; (add-to-list 'auto-mode-alist '("\\.inp\\'" . apdl-mode))

  ;; .anf is the suffix for "Ansys Neutral" files which include mostly
  ;;  gometric data but also some APDL snippets. See the file
  ;;  doc/example.anf.
  (add-to-list 'auto-mode-alist '("\\.anf$" . apdl-mode))
#+END_SRC

* Auto insertion
  of code.  With the following code block Emacs inserts (after query)
  an outline of a code structure when creating a new file with any
  suffix in the ~auto-mode-alist~ for ~apdl-mode~, please see above
  section).

#+BEGIN_SRC emacs-lisp :tangle yes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			  ;; Auto insertion
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; auto insertion stuff (when creating a new APDL file)

 (auto-insert-mode 1)		        ; insert automatically templates
 (add-hook 'find-file-hook 'auto-insert) ; when opening new files
 (setq auto-insert-query t)   ; aks for auto insertion of APDL template

 (add-to-list 'auto-insert-alist
  '(apdl-mode . [apdl-skeleton-outline-template])) ;which template to insert

#+END_SRC

* Miscellaneous

   #+begin_src emacs-lisp :tangle yes
      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;; Miscellaneous
      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     
     ;; use Emacs' EWW browser for locally installed help
     (setq browse-url-browser-function 'eww-browse-url)
     ;; use the default system browser
     ; (setq browse-url-browser-function 'browse-url-default-browser)
     
     ;; Some element collections, like "SHELLS" are implemented with `#'
     ;; anchors which are not standard URLs.  This leads to an error on
     ;; Windows with w32-shell-execute for locally installed help files.
     ;; Browsers don't mind the anchors, so in this case use either EWW
     ;; (see above) or specify an installed browser in your init file, see
     ;; below example for MS Edge:
     
       (defun browse-url-edge (url &optional new-window)
       (shell-command
	(concat "start msedge " url)))
     
       ; (setq browse-url-browser-function 'browse-url-edge)
   #+end_src


  #+BEGIN_SRC emacs-lisp :tangle yes
    ;; The amount of time the help overlay is shown from
    ;; (`apdl-show-command-parameters').

    ; (setq apdl-parameter-help-duration 30) ; 30 seconds, the default
    (setq apdl-parameter-help-duration "2 min")

    ;; If you want to read the manual in GNU-Emacs' EWW browser.  This
    ;; might only work for locally installed help documents (a 1.7 GB
    ;; package v201) since v191 the online help is the default help
    ;; system.

    ;; You might use this variable to create you own templates
    ;; in `apdl-wb-template.el'.

    (setq apdl-wb-custom-template-directory "c:/my_macros/") ; new in 20.4.0

    ;;  APDL-Mode mode configures the following variable from the
    ;;  evironment to show your license usage in
    ;;  `apdl-user-license-status'.  It is the user ID you are registered
    ;;  for the license server.  This is only necessary if APDL-Mode can't
    ;;  find the environment variable USERNAME.

    (setq apdl-username "myUserID") 		; new in 20.4.0
  #+END_SRC

* COMMENT Autoloading (became obsolete with the packaging system)
  Below set of useful commands can be interactively called (with M-x
  ...)  even when APDL Mode was not activated i.e. its lisp files not
  yet loaded, with the following code.
  #+BEGIN_SRC emacs-lisp
(autoload 'apdl "apdl-mode" "Opening an empty buffer in APDL-Mode" 'interactive)
(autoload 'apdl-mode "apdl-mode" nil t)
(autoload 'apdl-customise-apdl "apdl-mode" "Activate the function for
 calling a special Ansys customisation buffer." 'interactive)
(autoload 'apdl-abort-file "apdl-mode" "Activate the function for  aborting Ansys runs." 'interactive)
(autoload 'apdl-display-error-file "apdl-mode" "Activate the function for inspecting the Ansys error file." 'interactive)
(autoload 'apdl-start-apdl-help "apdl-mode" "Activate the function for starting the Ansys help browser." 'interactive)
(autoload 'apdl-start-ansys "apdl-mode" "Activate the function for starting the APDL interpreter under GNU-Linux or product launcher under Windows." 'interactive)
(autoload 'apdl-start-classics "apdl-mode" "Activate the function for starting the MAPDL in GUI Mode (APDL-Classics)." 'interactive)
(autoload 'apdl-start-wb "apdl-mode" "Activate the function for starting Workbench." 'interactive)
(autoload 'apdl-license-status "apdl-mode" "Activate the function for displaying Ansys license status or starting a license utility." 'interactive)
(autoload 'apdl-mode-version "apdl-mode" "Show APDL-Mode's version number." 'interactive)
  #+END_SRC

#+BEGIN_SRC emacs-lisp :exports none  :tangle yes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			      ;; Autoloading
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Set of useful commands which are interactively available (M-x ...)
;; even when APDL Mode was not (yet) activated i.e. the lisp files not
;; loaded.

  (autoload 'apdl "apdl-mode" "Opening an empty buffer in APDL-Mode" 'interactive)
  (autoload 'apdl-mode "apdl-mode" "Switch to APDL-Mode" 'interactive)
  (autoload 'apdl-customise-apdl "apdl-mode" "Activate the function for
  calling a special Ansys customisation buffer." 'interactive)
  (autoload 'apdl-abort-file "apdl-mode" "Activate the function for  aborting Ansys runs." 'interactive)
  (autoload 'apdl-display-error-file "apdl-mode" "Activate the function for inspecting the Ansys error file." 'interactive)
  (autoload 'apdl-start-apdl-help "apdl-mode" "Activate the function for starting the Ansys help browser." 'interactive)
  (autoload 'apdl-start-ansys "apdl-mode" "Activate the function for starting the APDL interpreter under GNU-Linux or product launcher under Windows." 'interactive)
  (autoload 'apdl-start-classics "apdl-mode" "Activate the function for starting the MAPDL in GUI Mode (APDL-Classics)." 'interactive)
  (autoload 'apdl-start-wb "apdl-mode" "Activate the function for starting Workbench." 'interactive)
  (autoload 'apdl-license-status "apdl-mode" "Activate the function for displaying Ansys license status or starting a license utility." 'interactive)
  (autoload 'apdl-mode-version "apdl-mode" "Show APDL-Mode's version number." 'interactive)

#+END_SRC

* Outlining
  Activating outline minor mode for selectively hiding and unhiding
  code sections:

#+BEGIN_SRC emacs-lisp :tangle yes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			     ;; Outlining
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; activating outline minor mode for selectively hiding/unhiding
;; sections

(add-hook 'apdl-mode-hook 'apdl-outline-minor-mode) ;enable outlining

#+END_SRC

* Highlighting (Colourisation)
** Dynamic highlighting
   of variables.  The following toggles a dynamics change of the
   highlighting: While you are editing your new variable definitions
   highlighted and the cursor position is shown in the parameter help
   overlay

   Uncommenting the following might slow the editing of large .mac
   files (but only when apdl-highlighting-level is set to 2, see
   below).

#+BEGIN_SRC emacs-lisp
(setq apdl-dynamic-highlighting-flag nil)
; (setq apdl-dynamic-highlighting-flag t) ;default: t
#+END_SRC

** Decoration levels
   Decoration levels 0,1,2 are available.  User variable highlighting
   is only in level 2 available (statical, if above flag is not set),
   the current default is 2.

** Summary
#+BEGIN_SRC emacs-lisp :tangle yes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
		     ;; Highlighting/Colourisation
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; The following toggles a dynamics change of the highlighting: While
;; you are editing your new variable definitions highlighted and the
;; cursor position is shown in the parameter help overlay

;; Uncommenting the following might slow the editing of large .mac
;; files (but only when apdl-highlighting-level is set to 2, see
;; below).

 (setq apdl-dynamic-highlighting-flag nil)
 (setq apdl-dynamic-highlighting-flag t) ; default

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; fontification (highlighting) of user variables and decoration
;; levels (0,1,2 are available), user variables highlighting is only
;; in level 2 available (statical, if above flag is not set), the
;; default is 2

 (setq apdl-highlighting-level 1) ; default: 2

#+END_SRC
* Installation dependent configurations
  Further things you possibly have to configure if your Ansys
  installation is completely differing from a default Ansys installation
  path, or if you want to mix various Ansys versions:

#+BEGIN_SRC emacs-lisp  :tangle yes
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
			   ;; Ansys version and paths
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

    ;; Things you might have to configure if your Ansys installation is
    ;; completely differing from default Ansys installation paths, as in
    ;; the example below, especially if you want to use mixed version
    ;; installations of Ansys:

  (setq apdl-ansys-help-program
      "/appl/ansys_inc/20.0.1/v201/commonfiles/help/HelpViewer/AnsysHelpViewer.exe")
      ;; the default under GNU-Linux looks like this:
      ;; "/ansys_inc/v201/commonfiles/help/HelpViewer/AnsysHelpViewer.exe"
  ;; On WINDOWS: slash before /d: is unnecessary, but possible?
  (setq apdl-ansys-help-path "d:/Program Files/Ansys Inc/16.2.0/v201/commonfiles/help/en-us/help/")
  (setq apdl-ansys-help-path "/appl/ansys_inc/16.2.0/v201/commonfiles/help/en-us/help/")
  (setq apdl-ansys-launcher "/appl/ansys_inc/v201/ansys/bin/winx64/launcher")
  (setq apdl-ansys-wb "/appl/ansys_inc/v201/Framework/bin/Linux64/runwb2")
  (setq apdl-ansys-program "/appl/ansys_inc/19.3.0/ansys/bin/ansys195")
  (setq apdl-lmutil-program "/appl/ansys_inc/19.3.0/shared_files/licensing/linx64/lmutil")

#+END_SRC

* COMMENT Extending Emacs load path and initialisation
  redundant with package.el
#+BEGIN_SRC emacs-lisp :tangle yes

;; adding the directory of this (loaded) file to the load-path
(add-to-list 'load-path (file-name-directory load-file-name))
;; setting the APDL-Mode install directory
(setq apdl-mode-install-directory (file-name-directory load-file-name))
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              ;; The End
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; apdl-config.el ends here

;; Local Variables:
;; no-byte-compile: t
;; End:

#+END_SRC

* Ansys processes
** License server
   or license file.

   The more license servers are specified in ~apdl-license-file~ the
   longer it takes to get the license status.

   License server configuration: License servers (or license file
   name) you have to specify also the port for (since Ansys V12.0).
   On GNU-Linux GNU-Linux: License servers are separated by colons
   (":"), on Windows with semicolon ";".  1055 is the default port.

   the following variable APDL-Mode is checking the environment
   variables AnsysLMD_LICENSE_FILE and MD_LICENSE_FILE.

   #+BEGIN_SRC emacs-lisp
     (setq apdl-license-file
       "1055@frlifl01.auto.contiwan.com:1055@frlifl02.auto.contiwan.com")
   #+END_SRC

   since Ansys 12.0 there is an intermediate server for the communication
   between flexlm and Ansys WorkBench, 2325 is here the default port.
   But the solver/interpreter is checking this server as well!?

   #+BEGIN_SRC emacs-lisp
   (setq apdl-ansysli-servers
      "2325@frlifl01.auto.contiwan.com:2325@frlifl02.auto.contiwan.com")
   #+END_SRC

** Solver options
   Number of cores for the run: 4 does not require HPC licenses

   #+BEGIN_SRC emacs-lisp
     (setq apdl-no-of-processors 8) ; default: 4
   #+END_SRC

   Which license type to use for the solver

   #+BEGIN_SRC emacs-lisp
     (setq apdl-license "preppost") ; default: "ansys"
   #+END_SRC

   The Ansys job name

   #+BEGIN_SRC emacs-lisp
     (setq apdl-job "harmonics1") ; default: "file"
   #+END_SRC

** Summary
#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                         ;; Ansys processes stuff
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; license server configuration


  ;; GNU-Linux 64 bit only !!! Warning specifiying many license server
  ;; takes a long time for displaying the license status!!!

   ;; for starting the solver & apdl-license-status & Ansys help
  (setq                 ;
   ;; license servers (or license file name)
   ;; specify even the default port for lmutil (since Ansys V 12.0) on GNU-Linux
   ;; GNU-Linux: License servers separated by colons (":"), 1055 is the default port
   apdl-license-file
   "32002@ls_fr_ansyslmd_ww_1.conti.de"

   ;; since Ansys 12.0 there is an intermediate server for
   ;; the communication between flexlm and Ansys, 2325 is the default port
   apdl-ansysli-servers
   "2325@ls_fr_ansyslmd_ww_1.conti.de"
   )

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                   ;; options when starting the solver
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  ;; Number of cores for the run, 4 does not require HPC licenses
   (setq apdl-no-of-processors 8) ; default: 4

  ;;  which license type to use for the solver
   (setq apdl-license "preppost") ; default: "ansys"

  ;; Ansys job name
   (setq apdl-job "harmonics1"); default: "file"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                              ;; The End
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(provide 'apdl-config)

;;; apdl-config.el ends here, the rest are Emacs variables

;; Local Variables:
;; no-byte-compile: t
;; show-trailing-whitespace: t
;; indicate-empty-lines: t
;; time-stamp-active: t
;; time-stamp-format: "%:y-%02m-%02d"
;; End:
#+END_SRC

-----

