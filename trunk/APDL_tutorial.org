#+TITLE:     ANSYS-Mode Tutorial
#+AUTHOR:    H. Dieter Wilhelm
#+EMAIL:     dieter@duenenhof-wilhelm.de
#+DATE:      2012-06-19 Tue
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:2 num:nil toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
##+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+PROPERTY: tangle yes

#+begin_src ansys  :tangle yes
  !! This is the auto-generated APDL source of the ANSYS-Mode tutorial
  !! from APDL_tutorial.org
  !! Copyright (C) 2006 - 2012 H. Dieter Wilhelm GPL V3
#+end_src
#+TITLE:     APDL_tutorial.org
#+AUTHOR:    Hans-Dieter Wilhelm
#+EMAIL:     uidg1626@sbav104x
#+DATE:      2012-06-20 Wed
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:t ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:


* Introduction to ANSYS-Mode

** Target audience  
  Editor mode <- Text <- APDL solver/interpreter
  
*** APDL users
*** Command snippets
*** Interested WB user

** Read the introductory ansys-mode_tutorial.pdf
   or use the online version.  You will learn that
   
   ANSYS-Mode is improving your workflow with

  2. Two parts: Run through some documentation then hands-on
  3. Simple download, installation (no admin rights), no configuration
     (for Win64/Lin64, but most things should run anyway)

   No costs and practically no license restrictions also for
     commercial use

Immediate satisfaction, without regret :-)
Free, open, extensible


* Usage as APDL viewer
*** Interesting even for pure WB users: true understanding with input files!

*** drag and drop: finite_field60.dat (M-n/p does not work in element numbered eblocks, nblocks!)

*** command-help from menu *M-?*
*** -start-ansys-help from menu *C-c C-h*
***  navigation (number blocks in .dat files) *C-c {*

* Usage as APDL editor
** Extensible code templates
Inspect some code templates (called skeletons in Emacs) in a preview window
*** type *C-c C-s* or choose the template preview from the ANSYS-Mode menu
Insert in the file APDL_tutorial.ansys here below this line the skeleton (C-u C-c C-s)  -structural-template
*** type *C-u C-c C-s* and choose the structural template
    or use the ANSYS-Mode menu to insert it
#+begin_src ansys  :tangle yes
  !@ --- Code templates ---
  !! insert below this line the skeleton (C-u C-c C-s)  ansys-structural-template
#+end_src

*** select the function (parametric, *get) template    
#+begin_src ansys  :tangle yes
  !! check out all parametric - and *get functions in the ansys-function-template
#+end_src

** Copy features
*** List variable definitions *C-c C-v*
    rather not with very big, sys 60 MB ANSYS input files
*** Copy above code with *C-c C-u*
*** Copy code line or region with *C-c C-c*    
#+begin_src ansys :tangle yes
!@ --- Copy code ---
!! apply C-c C-u, C-c C-c
#+end_src

** Commenting, uncommenting
*** mark some text with the mouse and type *M-;* 
 1. Marking blocks: *C-M-h*
 2. Marking paragraphs: *M-h*
!!    selecting blocks C-M-a/b setting mark!
*** mark commented region again and type again *M-;*
** Alignment of variable definitions

*** place the cursor on the following paragraph and type *C-c a*

#+begin_src ansys : tangle yes
!@ --- Alignment of assignments ---
!! place the cursor on the following paragraph and type C-c a
x=0.4!laskd
y= 33.0	    ! alskdl
xzv= 9999990.3	    !!
llk = 0.333333333 !bla
al_=  00.40
aslfÃ¶as = 304
ka= .4	    !salkd
i = 4.		    !as
kasd=.3/0.4
kasd =3./0.4
xxx =asin(3.0)
y = cos(i)
#+end_src

**  Completions (around 2000 ANSYS symbols)
    Case sensitive completions except for mouse completion
# !mouse completion of vglue
# vg
*** Completion of functions type *M-TAB*
    place the cursor behind 'ac' and type *M-TAB*
#+begin_src ansys : tangle yes
  !@ --- Function completion ---
  !! place the cursor behind 'aco' and 'Aco' and type *M-TAB*
  Pi = aco
  Pi = Aco
#+end_src ansys
*** completion of element names type *M-TAB*
#+begin_src ansys : tangle yes
  !@ --- Element name completion ---
  !! Completion of elements: typ M-TAB
  shell
#+end_src ansys
*** Completion of APDL commands type *M-TAB*
#+begin_src ansys : tangle yes
  !@ --- APDL command completion ---
  !! Completion of command names: typ M-TAB
  ns
#+end_src ansys

** Abbreviations facility
show the (locally) defined abbreviations with *C-u M-x list-abbrevs*
*** Use the ANSYS-Mode abbreviations
#+begin_src ansys : tangle yes
  !@ --- Mode defined abbreviations ---
  !! typ a SPACE behind the characters
  `p   ! Pi assignment
  `d   ! do loop abbreviation
#+end_src
*** Use dynamic abbreviation completion
!!    type *M-/*
!!    default (,) commands but most */ can't be "*repeated"
#+begin_src ansys : tangle yes
  !@ --- Dynamic abbreviations ---
  very_long_Variable = 3
  vlV = 8
#+end_src
*** type *M-TAB* repeatedly behind the 'v'
    (*ESC TAB* under Windows)
#+begin_src ansys : tangle yes
  !! typ a M-TAB behind the character
   v
#+end_src

** Closing of blocks, auto-indentation, dynamic variable fontification
I 
!(progn (setq ansys-highlighting-level 1 ansys-dynamic-highlighting-flag nil) (ansys-mode))
!(progn (setq ansys-highlighting-level 2 ansys-dynamic-highlighting-flag t) (ansys-mode))

***  Ansys symbol completion and emacs expansion
     *C-c ]* -- -close-block
#+begin_src  ansys : tangle yes
*if,I,eq,1,then
  c*** otto
*elseif,I,le,10
  /com,help me
*else
  /title,well well
#+end_src
 
!C-c C-c, C-w copying lines, condensed input, default command
#+begin_src ansys : tangle yes
  x2 = 1 $ y2 = 1 $ z2 = 1 
  immed,on                 !show graphics immediately
  block,,x2,,y2,,z2
       ,x2,2*x2,,2*y2,,2*z2 !default command line 
#+end_src

/pnum,line,1 $ lplo

** materials & deprecated elements
#+begin_src  ansys : tangle yes
!! element types & deprecated element types
et,Steel,beam3 $ et,Alu,shell91
et,10,solid46
#+end_src

*** loading ANSYS help browser *C-c C-h*
***   display license status	-license-status *C-c C-l*

** Highlighting      
!!    _return & _status values

#+begin_src  ansys : tangle yes
!@ --- Highlighting specials ---
N = _RETURN		 !_RETURN value of  command
_aaa = 9		 !reserved variables: preceding underscore "_" 
Depth  = ARG1	  !ARG{1-9}, AR{10-19} = "*use" variables
/eof --- WARNING: /eof crashes the Ansys GUI in interactive mode ---
#+end_src


* APDL process interaction and debugging debugging environment (Unix only)
  Switch off menu-, tool- and scroll-bars

** Start the ANSYS interpreter  
*** type *C-c RET*
    
** Solver communication

*** *C-c C-u*, *C-c C-c*
    have changed their meaning sending directly to the solver
*** Write to the solver: *C-c C-q*

*** *M-w* (copies line)

*** code comments M-j
#+begin_src ansys :tangle yes
!@ --- Commenting out, un-commenting
!! mark some paragraph M-h and apply M-;
#+end_src

** Graphical feedback
*** Open the interactive graphics window of ANSYS with *C-c C-g*
*** Open the ANSYS Pan/Zoom/Rotate dialog *C-c C-p*
** Display the license status
   highlighted is your current license choice
*** *C-c C-l*   
** Visiting the ANSYS error file
*** tail mode of \*.err with *C-c C-e*

*** writing an abort file
*** bookmarks positions -> in bookmarks/registers/clone buffer?
*** *C-c @* outline stuff with indirect-buffer
*** Dired (textual renaming), speedbar, calendar
# !!    loading time: emacsclient alias "e"
# !!    shell-, config-mode, emacsclient, terminal-, ssh-support
# !!    C-S-backspace, basically the same keyboard shortcuts like bash
*** calc again: linear interpolation: a p [[x1,x2,..][y1,y2,...]] x
# !! online Ansys/Emacs process and debugging environment
# !! C-c C-u, C-c C-c,  C-c C-q
*** shell-, config-mode, emacsclient, terminal-, ssh-support, smb-support
*** image-viewer
*** pdf-viewer    
# !! C-S-backspace

** Insert pairs of characters
   Convenient when wrapping charcters around characters or a whole word
*** type *C-c %*
!!    C-c %,',M-"
#+begin_src  ansys : tangle yes
   XXXX=55
   !@ --- Inserting pairs of characters ---
   /com,the result of XXXXX is XXXXX
#+end_src


# !meshing, colon loops, repeating
# lesi,(:)
# *repeat,2
# !bc
# !solution 
# !post 1 

# !!    colon loop: e.g.: lfillt,(1:3),(2:4),Rad, lesize,(1:5:2),Esize
# !!    preview C-c C-s (completion), insert skeletons
# !!    (alternatively abbrev mode?)

# !!    *go not for interactive mode! -> *if *else *endif


# !!    Ansys mode help: C-h m, selfdocumenting features
# !!    online Ansys/Emacs process and debugging environment

** Use the Emacs integrated RPN Calculator
   RPN (Reversed Polish Notation, HP calculators are using this input convention

*** Place the cursor behind the assignment (=) and type *C-x* * *
    to fire up Emacs Calc
#+begin_src ansys : tangle yes
!@ --- Emacs Calc ---
!! Place the cursor behind the assignment (=) and type C-x * * 
Pi =
!! Calculate a result in Emacs Calc and paste it into the APDL code with 'y'
#+end_src
    Calculate a result in Emacs Calc and paste it into the APDL code
    with *y*, type *q* to quit Calc

# !!    mouse selection ->copy to clipboard
# !! 0.) mouse selection does not work under Windows mouse-drag-copy-region!
# !! mouse copy on Windows the same on Linux only if (setq mouse-drag-copy-region t)

#+begin_src ansys : tangle yes
! continuation line with $
fini $ /clear
/prep7
*afun,deg
Pi = acos(-1)
*afun,rad
Pi = acos(-1)
x = 3.4 !lsk
y = .8	!ach
#+end_src

** Outlining of the APDL code
   !@, !@@, !@@@ are grouping indicators
*** Switch on outline-minor-mode
*** Use the outline menu
   type *C-c @ C-t* collapsing the bodies
   type *C-c @ C-a* showing everything
** Embeded calc

0.416195720427
2 x => 2 x

   
* Emacs introcuction
!! Emacs, why not?  Gnu Puplic License
*** *M-g M-g* goto line
*** Major mode menu
*** Buffer selection menu with *C-LMB*
*** PDF viewer
*** shell
*** File manager
*** Image viewer image-dired    
# !!  Free, open, extensible, working on all current OSs.  All bells
# and whistle of a !!  modern editor (drop file into E), excellent
# documentation.  Chosen !!  because with Vim, Emacs is the best
# editor of all, but - especially !!  on Windows - programmed before
# Microsoft was even founded.  !!  Drawbacks of Emacs, not adhering to
# established user interface !!  standards example: e. g. scroll-bar
# default location on linux on !!  the left,

# !!    Splitting windows (no tab concept for buffers)

# !!    TAB, M-TAB keys, C-s, C-c, C-v, C-x, C-y, C-z CUA-mode examples:
# !!    (setq scroll-preserve-screen-position t) (delete-selection-mode t)
# !!    Workaround: use in the beginning mouse and buttons.
   
# !!    convenient pre-configured emacs archive with Ansys mode.


# #+begin_src R :exports both
# # this is a comment, yeah :-)
#  bla <- 3
# bla 
# #+end_src
# #+RESULTS:
# : 3

######################################################################
#+begin_src ansys  :tangle no
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!! this is for Emacs:

!! local variables:
!! mode : ansys
!! end:
#+end_src

* Last slide, Conclusion/Summary?
Thank you for your time

