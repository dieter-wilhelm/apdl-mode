= Ansys mode documentation =

== Requirements ==
== Features ==
== Installation ==
== Usage ==
== History ==
== Resources ==
== Bugs and Problems ==

== Requirements ==

The code is based on Ansys version 12.0 and is written for the editor
GNU Emacs (not consciously targeted for XEmacs).  It is tested with
Emacs 23.1 under XP and GNU/Linux.  The code won't run without some
minor adaptions with Emacs 21.4.  Please visit
ftp://ftp.gnu.org/pub/gnu/emacs/windows/ for an official, precompiled
Windows versions of GNU Emacs.  You might unpack Emacs in any
directory.  Optionally you can run the program addpm.exe (located in
the bin directory) to add an Emacs entry to the Windows Start menu
(please refer to the README.W32 file).

The Ansys solver control and communication capabilities are mainly
restricted to UNIX systems.

== Features ==

* Ansys process management (viewing error files, license status, etc.)

* Solver control and comunication facilities (UNIX only)

* Command syntax help in the editor (similar to but more verbose then
  the Ansys dynamic prompt)

* Keyword (case-sensitive) completion of commands, elements, get- and
  parametric-functions of nearly 1900 Ansys symbols.

* Auto-indentation of looping - and conditional blocks

* Closing of open blocks with insertion of the appropriate end
  keyword (case-sensitive)

* Code navigation,extended keyboard shortcuts for code lines, number
  blocks, *DO -,*IF -, DOWHILE -, *CREATE-blocks etc.

* Sophisticated highlighting (optionally for user variables)

* Displays summary for all definitions (*GET, *DIM, *SET, = and
  *DO) of APDL variables.

* Use of the Emacs abbreviation facility for block templates

* Convenient comment handling, commenting out of whole paragraphs

* Outlining (hiding and navigating) of code sections with Emacs'
  outline-minor-mode

* Auto-insertion and preview of header and code templates for APDL
  files

== Installation ==

=== Short instruction ===

Important: Emacs must know where the code (.el) files reside.  Either
extract them into an Emacs directory which is in its default
load-path--this could be the "site-lisp" folder in your Emacs
installation tree--or you can indicate the directory to Emacs with the
environment variable EMACSLOADPATH.

From there on you must first load the mode definitions with `M-x
load-file ansys-mode RET', i. e. typing "M-x" (firt the "Alt" key and
then the "x" key simultaneously, you'll end up in the so called Emacs
minibuffer prompt), now type "load-file" (you might apply the "TAB"
key for the Emacs auto-completion feature at every intermediate stage)
and conclude this input with the "RET" key. And then call the mode
itself with `M-x ansys-mode RET' for every respective macro file

----------------------------------------------------------------------

Alternatively, put the following paragraph into your ".emacs"
configuration file (in your home directory), adjust the stuff in
capital letters, restart Emacs and enjoy.

    (add-to-list 'load-path "C:\\DIRECTORY-PATH\\WHERE\\THE\\ANSYS-MODE\\FILES\\RESIDE")
      ;assuming you extracted the files on drive "c:"
      ;for example: "c:\\emacs\\emacs-23.1"
    (add-to-list 'auto-mode-alist '("\\.mac\\'" . ansys-mode))
    (add-to-list 'auto-mode-alist '("\\.inp\\'" . ansys-mode))
    (autoload 'ansys-mode "ansys-mode" nil t)
      ;Above loads ansys-mode automatically for all files with
      ;the suffixes ".mac" and ".inp".

=== Verbose instructions ===

* The most direct way of using Ansys mode is by extracting the mode
  files in the load-path of Emacs (e. g. the "site-lisp" folder of
  your Emacs directory tree) and loading the definitions from there
  with the Emacs command `load-file' i. e.  type "M-x load-file RET",
  "M-x" means typing first the "Alt"-key and then the "x"-key
  simultaneously.  This gives you a prompt where you can type
  `load-file' followed by the "RET" key to conclude the command.
  Emacs will then prompt you for a file.  Specify the path and the
  file "ansys-mode.el".

  (If you are unfamiliar by above concepts I suggest working through
  the build-in tutorial of GNU Emacs (you'll find it in the help
  menu), it doesn't take too much time and the investment will be
  worth it since it will also accelerate your general editing
  capabilities.)

  Since the code is now loaded into memory you are able to type "M-x
  ansys-mode RET" to activate the mode for the current file.

* When it becomes tiring of loading 'ansys-mode.el' every time you are
  starting a new Emacs session, you should specify the installation
  path for the mode files in your '~/.emacs' file (the configuration
  file '.emacs' of GNU Emacs in your home directory '~\').

     (add-to-list 'load-path
                  "C:\\YOUR\\DIRECTORY\\WHERE\\MODE\\FILES\\RECIDE")

* When you intend to apply the mode automatically, e. g. for all files
  you are opening with the extensions '.mac' and '.inp' ( .inp is the
  WorkBench default solver input file suffix), add the following to
  your '.emacs' file:

     (add-to-list 'auto-mode-alist '("\\.mac$" . ansys-mode))
     (add-to-list 'auto-mode-alist '("\\.inp$" . ansys-mode))
     (autoload 'ansys-mode "ansys-mode" "Activate Ansys mode." 'interactive)

  The suffix below belongs to the "anys neutral file" export format
  which contains also an APDL header and footer.

     (add-to-list 'auto-mode-alist '("\\.anf$" . ansys-mode))

* In case you also want to enjoy the auto insertion feature, which
  puts (optionally) some predefined body of Ansys commands to every
  new APDL file insert the following into '.emacs':

     (setq auto-insert-mode 1)
     (setq auto-insert-query t) ;insert only after request
     (add-to-list 'auto-insert-alist '(ansys-mode . [ansys-skeleton-compilation]))

* With below section you are also able to use certain Ansys related
  commands in a new Emacs session without the need of previously
  having explicitely called ansys-mode.

     (autoload 'ansys-abort-file "ansys-process" "Activate Ansys abort file function." 'interactive)
     (autoload 'ansys-display-error-file "ansys-process" "Activate Ansys display error file function." 'interactive)
     (autoload 'ansys-start-ansys-help "ansys-process" "Activate Ansys start help function." 'interactive)
 TODO: -license-file, -license-program variables
     (autoload 'ansys-license-status "ansys-process" "Activate Ansys license status function." 'interactive)

* For further customisation please have a look at the accompanying
  "default.el" example, this applies specifically for the mode's
  solver communication capabilities.  The file could be used as as
  system wide startup file in the "EMACS_INSTALLDIR/site-lisp"
  directory and is also an alternative method to specifying entries in
  "~/.emacs".

== Usage ==

* When you have a file under `ansys-mode' check out the menu bar's
  "Ansys" entry for its possibilities and select there "Describe Ansys
  Mode" or type "C-h m" (i. e. the CTRL key together with the "h" key
  and then the "m" key), which will provide you with a textual guide
  for its basic usage.

== Acknowledgements ==

(In no particular order):
rms,
Holger Sparr,
Eli Zaretzki,
Markus Triska,
Mathias Dahl,

== History: ==

* The version scheme is a mixture of the Ansys version (12.0) on
  which some code is based and the version of the Ansys mode (1)
  itself.

=== Version 12.0.1 ===

* The lisp code had to be split up for better maintance, the code
  files for are now provided in an archive.

* There are now 3 highlighting levels to choose from

* The output from the LMUtil license status tool (C-c C-l) is now
  filtered

* C-c C-c command is now generalised so that it does some useful work
  without a running Ansys process

* Added tooltips to the Ansys menu

=== Version 11.0.2 ===

* Enabled the preview of code templates or fragments (called
  skeletons in this mode, please inspect `ansys-display-skeleton').

* Removed "buffer has no process" bug when killing an ansys-mode
  buffer

=== Version 11.0.1 ===

* Submitting interactively Ansys commands (via minibuffer query not
  only written in a macro file) to the solver process,
  ansys-query-ansys-command (C-c C-q)

=== ansys-mode.el version 11.0.1 in comparison to its predecessor
  ansys-mod.el: ===

* New: Provides Ansys command parameter- and syntax help.

* New: Offers Ansys process management: Acquiring license server
  information in a buffer Starting and stopping asynchronously
  Ansys runs.  Sending code lines to running Ansys process (sort of
  code debugging facility) and getting the output into a buffer.

* New: Experimental highlighting of user defined variables.
  Redefinition and clearing of variables is not yet taken into
  account

* New: Emacs customisation facility is available for the new Ansys
  mode group.

* New: Emacs outline-minor-mode is readily available in conjunction
  with this mode.

* Completions of Ansys commands are now case-sensitive, with
  additional completion of function and element names.

* Previously defined skeletons are fully functional now, new ones
  are added and enabled with the abbreviation and auto-load
  facilities of Emacs 22.

* Ansys' interpreter's disregard of any capitalisation is now fully
  taken into account in the highlighting.

* The apostrophe "'" is now assigned as the Ansys string and the
  value of character parameters delimiter and not wrongly "''";
  the strings are fontified accordingly.

* The dollar sign "$" is now emphasised as the Ansys condensed
  input character (multiple Ansys commands in one line).

* The colon ":" is now emphasised as the Ansys colon do loop
  character ("(x:y:z)" means from x to y, in z steps, z is equal to
  one as default).  For example: "n,(1:6),(2:18:2)" runs 6 loops.
  Colon loops are working also with real values: k,,(2.5:3:0.1) and
  with array parameters: k,,A(1:100), but the latter is an
  undocumented feature. Since ansys 11.0 the colon looping is also
  working with *GET functions (example: A(1:5)=NX(1:5))). A ":"
  indicates also a beginning of a label for the *GO and *IF
  command.

* "%" is now distinguished as the Ansys parameter substitution
  and format specifier character.

* The ampersand "&" is now correctly highlighted as the only
  available Ansys continuation character applicable to the format
  commands (*MSG, *MWRITE, *VREAD and *VWRITE) command and the
  subsequent format strings of the command are fontified.

* New: " *" (SPC before *) is indicated as an (Ansys deprecated)
  comment sign e. g.: "a = 3 **4" results in "a" setting to 3,
  whereas "a = 3**4" sets "a" to 81!

* New: A line beginning with a comma is indented to the lenght of
  the last non slash or asterisk command as a reminder that the
  Ansys solver interprets this as a space holder for the last
  command keyword (the Ansys default command concept).

* Extended documentation, code cleaning and simplification of
  commands (e.g. comment handling) with the application of standard
  Emacs 22 facilities among other things.

== Resources ==

http://www.emacswiki.org
http://www.ansys.net -- general Ansys repository
http://www.ansys.com
http://www.ansyssolutions.com -- The Ansys solutions magazine
http://www.xansys.org -- ansys online community

== Minor Bugs and Problems ==

C*** does no parameter substitution, neither the /SYS command; this is
wrongly suggested in the variable highlighting of Ansys mode.

Comments behind the C*** are not possible and wrongly highlighted

A resetting of variables (VAR= ) is not taken into account

Ansys format line (multi-line) highlighting is somewhat brittle,
please use M-o M-o to update the fontification in case the format line
is not correctly highlighted.

The *END command is special: It needs 8 characters in all (+ 4
whitespaces to differentiate it from *ENDIF) before a comment
character behind it is accepted from the solver (please see the Ansys
12.0 manual), this is not yet indicated in ansys-mode.

=== Getting help ===

If you experience problems installing or running this mode you have
the following options:

* Write an email to the mode maintainer (you can trigger a bug report
  from the menu--at least a useful template when you are not in the
  position of sending emails within Emacs--or calling directly the
  function `ansys-submit-bug-report').

* When you have already a (cost free) Google account you are able
  to issue a bug report at the Google Code hosted page
  http://code.google.com/p/ansys-mode/issues/list.  From this site
  you can also download the latest development version.

* It might be helpful for you to visit the Emacs Wiki
  (http://www.emacswiki.org/cgi-bin/wiki/AnsysMode).  At the Wiki you
  can add some comments or wishes.
