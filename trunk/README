This text is from README, the Ansys mode documentation (below
formatting is targeted for the Emacs Wiki)

Copyright (C) 2006 - 2012  H. Dieter Wilhelm, GPL V3

== Introduction ==
GNU Emacs Editor support for working with Ansys FEA.

This project provides Gnu Emacs editor support for working with the
FEA (Finite Element Analysis) program Ansys (http://www.ansys.com).
Gnu Emacs (http://www.gnu.org/software/emacs/) is an up-to-date,
powerful, yet free editor which is available for any operating system
where Ansys is running.  The code defines 'Ansys mode', an Emacs mode
for inspecting, writing and navigating in APDL (Ansys Parametric
Design Language) files and offers managing and communication
capabilities for Ansys solver/interpreter processes as well.

Some features are quite sophisticated but the overall documentation is
targeted for Ansys users with little Emacs experience.  Any
suggestions for improvements are very welcome.  The current stable
version 14.0.1 is available at the Google Code site
http://code.google.com/p/ansys-mode ("wget
http://code.google.com/p/ansys-mode/downloads/list/ansys-mode-14.0.1.tgz",
development versions can be checked out with "svn checkout
http://ansys-mode.googlecode.com/svn/trunk ansys-mode").  For the
installation, issues and comments please have a look at the Ansys mode
Wiki (http://www.emacswiki.org/cgi-bin/wiki/AnsysMode) or submit a bug
report at the issues list at its Google Code site
(http://code.google.com/p/ansys-mode/issues/list).

== Requirements ==

The code is based on Ansys version 14.0 and is written for GNU Emacs
and not consciously targeted for XEmacs.  It is tested with
Emacs-23.3, Emacs-23.2 and Emacs-23.1, XP64 and GNU/Linux.  The code
compiles and runs also with Emacs-22.1, i. e. it should work with this
and any later version.  (Emacs-23.2 was relased in May 2010,
Emacs-23.1 in July 2009, Emacs-22.1 in July 2007.)  The code can be
loaded but won't run flawlessly without adaptions for Emacs-21.3
(released in Mar. 2003).

If applicable please grab the package of a pre-compiled Emacs-23.3 for
Windows together with a preconfigured Ansys mode at above Google Code
site and unpack this archive anywhere on your system.  Alternatively
visit http://ftp.gnu.org/pub/gnu/emacs/ for an original version of GNU
Emacs and/or extract and configure the Ansys mode package separately.

The Ansys solver control and communication capabilities are somewhat
restricted on non-UNIX systems.

The latest Ansys mode consists of more than one lisp file, be sure you
have all necessary files, please consult the == Installation ==
section for a list of them.

== Features ==

* Ansys process management (viewing error files, license status,
  starting the Ansys help browser, etc.)

* Solver comunication facilities, i. e. sending code fragments from
  the macro file or commands interactively to an Ansys solver instance
  (UNIX only)

* Command syntax help in the editor (similar to but more verbose then
  the Ansys dynamic prompt) also with hints for undocumented commands

* Keyword completion of Ansys commands, elements, get- and
  parametric-functions (case-sensitive) of nearly 2000 Ansys symbols

* Comprehensive keyboard shortcuts for code navigation: Skipping
  comments, navigating number blocks, searching *DO-, *IF-, *DOWHILE-,
  *CREATE-blocks, etc.

* Syntax highlighting in various decoration levels (complete Ansys
  keywords, undocumented commands, deprecated elements, ...)  and
  optionally also user defined variables (experimental)

* Alignment (beautification) of whole sections with variable
  defintions

* Overview of *every* variable definition (*GET, *DIM, *SET, =, *DO,
  CM, *VGET, ...), as well as component names, in the current file.
  These are shown in another window.  In the highest decoration level
  (2) these "user variables" are highlighted as well

* Preview and insertion (optionally auto-insertion) of header and
  Ansys code templates for APDL files.  Respective snippets represent
  examples of APDL work flows and considerable Ansys know-how and are
  easily extensible to boot.  The templates are partly interactive
  i. e. they are asking for or completing user input.

* Convenient comment handling, commenting out whole paragraphs or
  whole control blocks and vice versa

* Auto-indentation of looping blocks and conditional control blocks
  together with closing of open blocks with auto-insertion of the
  appropriate end keyword (case-sensitive)

* Outlining (hiding and navigating) of code sections with Emacs'
  outline-minor-mode

* Use of the Emacs abbreviation facility for block templates
  i. e. with writting a "nickname" Emacs exchanges the characters with
  a whole code template

* Ansys mode changes some Emacs default behaviour to alleviate the
  transition from other editors and user interface standards

As a visual example, a screen-shot on EmacsWiki and Google code show
an Emacs frame (GTK+ toolkit under Linux) with a ripped off Ansys menu
field.  The APDL file is in the right window with the (experimental)
user variable highlighting switched on and a help overlay (in yellow
background) activated. The smaller windows on the left hand side are
showing the "Variable definitions buffer" of the same file and a
preview buffer of a certain code template, respectively.

http://www.duenenhof-wilhelm.de/dieter/ansys-mode.jpg

== Installation ==

The version scheme is a mixture of the Ansys release (currently 14.0)
on which the highlighting and completing code is based and the version
increments (currently .1) of Ansys mode (thus 14.0.1) for this
particular Ansys release.

=== Files ===

Sources:
* ansys-mode.el
* ansys-keyword.el
* ansys-template.el
* ansys-process.el

(and possibly their compiled versions with the suffix '.elc'.  In case
you are using the mode with an older version of Emacs than 23 please
remove the .elc files.)

Auxiliaries:
* README -- this file
* NEWS -- and history
* TODO -- todos and deficiencies
* LICENSE -- the GPL (Gnu Puplic License) Version 3
* default_el -- configuration examples (of an Emacs 'default.el')
* fontification.mac -- highlighting APDL example
* ansys-mode.pdf -- A tutorial

=== Short instructions ===

__For Windows systems:__

Please use the Emacs archive bundled with the latest stable
preconfigured Ansys mode at http://code.google.com/p/ansys-mode.
Unpack the archive anywhere on the system (you do not need
administrator rights).  You might subsequently run the program
addpm.exe (located in the bin directory) to add an Emacs entry to the
Windows Start menu (please refer to the README.W32 file) otherwise
start the Emacs executable runemacs.exe from there.  Ansys mode is
immediately available, by opening (check the fontification.mac
example) or creating a new APDL file with a .mac suffix.  Have fun!

(If you did not install Ansys in its default Installation directory on
drive C:, please adjust the `default.el' file in Emacs' `site-lisp'
directory accordingly, if you want to be ablet to start 'anslic_admin'
or the Ansys help program directly from Ansys mode.)

__For existing Emacs installations on Windows or UNIX:__

==== Direct way; no file configuration necessary ====

Important prerequisite: Emacs must know where all the code (.el or its
compiled versions .elc) files reside!  Extract the mode archive into
an Emacs directory which is in its default load-path (a good place is
the "site-lisp" folder in your Emacs installation tree) or indicate
the directory with the environment variable EMACSLOADPATH).

From there on you must load first the mode definitions with `M-x
load-file ansys-mode RET', i. e. typing "M-x" (first) the "Alt" key
and then the "x" key simultaneously, you'll end up in the so called
Emacs minibuffer prompt, now type "load-file" (you might apply the
"TAB" key for the Emacs auto-completion feature at every intermediate
stage) and conclude this input with the "RET" key. Emacs will then
prompt you for a file, type in the directory where you have extracted
the code and "ansys-mode.el" (or better "ansys-mode.elc" for speed
reasons if the compiled version is available) and press RET to execude
the loading.  Thereafter call the mode itself with `M-x ansys-mode
RET' for every new or existing APDL file.

==== More convenient way; file configuration necessary ====

Extract the files somewhere on disc and put the following paragraph
into your ".emacs" configuration file (in your home directory), adjust
the stuff in capital letters, restart Emacs and ansys-mode will be
automatically applied for all files with suffixes ".mac", ".dat" and
".inp".

    (add-to-list 'load-path "C:\\DIRECTORY-PATH\\WHERE\\THE\\ANSYS-MODE\\FILES\\RESIDE")
      ;assuming you extracted the files on drive "c:"
      ;for example: "c:\\emacs\\emacs-23.1"
    (add-to-list 'auto-mode-alist '("\\.mac\\'" . ansys-mode))
    (add-to-list 'auto-mode-alist '("\\.dat\\'" . ansys-mode))
    (add-to-list 'auto-mode-alist '("\\.inp\\'" . ansys-mode))
    (autoload 'ansys-mode "ansys-mode" nil t)

=== Verbose instructions ===

* Direct way, no configuration necessary (loading "by hand")

Please consult the "direct way" description above.

If you are unfamiliar by these concepts I suggest working through the
build-in tutorial of GNU Emacs (you'll find it in the help entry in
the menu bar), it doesn't take too much time and the investment will
be worth it since it will accelerate your general editing capabilities
in the future.

* Permanent configuration

When it becomes tiring of loading 'ansys-mode.el' (or
'ansys-mode.elc') every time you are starting a new Emacs session, you
should specify the installation path for the mode files in your
'~/.emacs' file (the configuration file '.emacs' of GNU Emacs in your
home directory '~\').

     (add-to-list 'load-path
		  "C:\\YOUR\\DIRECTORY\\WHERE\\MODE\\FILES\\RECIDE")
     (autoload 'ansys-mode "ansys-mode" "Activate Ansys mode." 'interactive)

From here you are able to type "M-x ansys-mode RET" to activate the
mode for every interesting file.

* Automatic mode assignment

When you intend to apply the mode automatically, for all files with
the extensions ".mac", ".dat", ".inp" and ".anf" ( .dat and .inp are
WorkBench's solver input file suffixes) you are opening, add the
following to your '.emacs' file:

     (add-to-list 'auto-mode-alist '("\\.mac$" . ansys-mode))
     (add-to-list 'auto-mode-alist '("\\.dat$" . ansys-mode))
     (add-to-list 'auto-mode-alist '("\\.inp$" . ansys-mode))
     ;; this is the suffix for "Ansys Neutral Files" which include some APDL.
     (add-to-list 'auto-mode-alist '("\\.anf$" . ansys-mode))

The suffix below belongs to the "anys neutral file" export format
which contains also an APDL header and footer.

     (add-to-list 'auto-mode-alist '("\\.anf$" . ansys-mode))

* Autoinsertion of code

In case you also want to enjoy the auto insertion feature, which puts
(optionally) some predefined body of Ansys commands to every new APDL
file insert the following into '.emacs':

     (setq auto-insert-mode 1)
     (setq auto-insert-query t) ;insert only after request
     (add-to-list 'auto-insert-alist '(ansys-mode . [ansys-skeleton-compilation]))

* Autoloading of helper functions

With below section you are also able to use certain Ansys related
commands in a new Emacs session without the need of previously having
explicitely called ansys-mode.

     (autoload 'ansys-customise-ansys "ansys-mode" "Activate the function for calling a special Ansys customisation buffer." 'interactive)
     (autoload 'ansys-abort-file "ansys-mode" "Activate the function for  aborting Ansys runs." 'interactive)
     (autoload 'ansys-display-error-file "ansys-mode" "Activate the function for inspecting the Ansys error file." 'interactive)
     (autoload 'ansys-start-ansys-help "ansys-mode" "Activate the function for starting the Ansys help browser." 'interactive)
     (autoload 'ansys-license-status "ansys-mode" "Activate the function for displaying Ansys license status or starting a license utility." 'interactive)

* A further configuration method

As a summary and example to these and further customisation options
please have a look at the accompanying "default_el" example. This is
helpful especially if you intend to use the mode's solver
communication capabilities.  This file can be used, after renaming it
to "default.el" and adjusting as as system wide startup file for Emacs
in the "EMACS_INSTALLDIR/site-lisp" directory and is therefore an
alternative to customisations in ".emacs", your personal configuration
file.

== Usage and customisation ==

When you have a file under `ansys-mode' check out the menu bar's
"Ansys" entry for its possibilities and select the entry "Describe
Ansys Mode" or type "C-h m" (i. e. the CTRL key together with the "h"
key and subsequently the "m" key), which will display the Ansys mode
help which is your "online" guide for its usage, keybindings and
customisation options.

Templates, i.e. code snippets or skeletons might be extended in
"ansys-template.el" and can be used similarly or complementarily to a
classical Ansys macro library.

== Experienced Emacs users ==

Ansys mode changes the default behaviour of Emacs

globally:

* Switches on font-lock-mode if toggled off, e.g when calling Emacs with
  the -D (basic display) option
* Activated Delete Selection Mode (delete-selection-mode t)
* Activated Show Paren Mode (show-paren-mode t)
* Advised M-w (kill-ring-save) without active region to copy the whole line

(Delete Selection Mode can be switched off in the Ansys menu.)

locally:
* (setq scroll-preserve-screen-position t)
* Changed M-h (mark-paragraph) to move the cursor to the end of the region

== Acknowledgements ==

In mainly cronological order:

* Ilya Gurin
* Alex Schroeder
* Holger Sparr
* Eli Zaretzki
* Markus Triska
* Mathias Dahl
* rms


== Resources ==

* http://www.emacswiki.org
* http://www.ansys.net -- general Ansys repository
* http://www.ansys.com
* http://www.xansys.org -- ansys online community
* http://www.padtinc.com/pedal -- another APDL script editor

== Bugs and Problems ==

For an overview of the outstanding issues please have a look at the
TODO file.

The "user variable" highlighting is still experimental, newly edited
variable definitions are taken into account only when the variable
ansys-dynamic-highlighting-flag is set (for very large files this
slows Emacs and this flag is only implemented for ".mac" files) or any
times when you activate the variable display (with C-c C-v) and the
maximum highlighting level.  If not already the case try to use the
code in compiled form, please have a look at the documentation of the
Emacs function `byte-recompile-directory'.

Ansys "format line" (multi-line highlighting) and "user variable"
highlighting (when the mentioned flag above ist not set) are somewhat
brittle, please use M-o M-o to update the fontification in case the
format line and all variables are not highlighted correctly.

=== Getting help ===

If you experience problems installing or running this mode you have
the following options:

* Write an email to the mode maintainer (you can trigger a bug report
  from the menu or directly calling the function
  `ansys-submit-bug-report'.  Even when you are not in the position of
  sending emails from within Emacs this will give at least a useful
  mail template with valuable information about internal mode
  settings).

* When you have already a (cost free) Google account you are able
  to issue a bug report at the Google Code hosted page
  http://code.google.com/p/ansys-mode/issues/list.  From this site
  you can also download the latest development version.

* It might be helpful for you to visit the Emacs Wiki
  (http://www.emacswiki.org/cgi-bin/wiki/AnsysMode).  At the Wiki you
  can add some comments or wishes.

# local variables:
# word-wrap: t
# show-trailing-whitespace: t
# indicate-empty-lines: t
# end:
