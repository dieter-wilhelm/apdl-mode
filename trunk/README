This is the text of the ANSYS-Mode README file (the formatting is
targeted for the EmacsWiki)

Copyright (C) 2006 - 2012  H. Dieter Wilhelm, GPL V3

== Introduction ==

http://duenenhof-wilhelm.de/dieter/ansys-mode_tutorial/ansys+emacs.png

This [http://code.google.com/p/ansys-mode/ project] supports working
with the FEA (Finite Element Analysis) suite [http://www.ansys.com
ANSYS] (ANalysis SYStem).

It provides 'ANSYS-Mode', an add-on to the
[http://www.gnu.org/software/emacs/ Gnu Emacs] editor for navigating
in, inspecting and writing APDL files.  The mode offers managing and
communication capabilities for ANSYS processes, like interactive code
debugging with the ANSYS solver/interpreter or listing the current
license status, etc. Some features are quite sophisticated but the
overall documentation is targeted for ANSYS users with little Emacs
experience.

[http://www.gnu.org/home.en.html Gnu] Emacs (Gnu's Not Unix) is an
up-to-date, extensible, powerful, yet free editor which is available
for any operating system where ANSYS is running.

The current stable version (14.0.1) of ANSYS-Mode is available at the
[http://code.google.com/p/ansys-mode Google Code site] (hint: paste
e. g. "wget
http://code.google.com/p/ansys-mode/downloads/list/ansys-mode-14.0.1.tgz"
to get the sources).  Besides the code and Emacs you will find also in
the download section two PDF tutorials or have immediately a look at
the
[http://duenenhof-wilhelm.de/dieter/ansys-mode_tutorial/ansys-mode_tutorial.html
introductory online version], where you can see the images in a higher
resolution as in the PDFs or the
[http://duenenhof-wilhelm.de/dieter/ansys-mode_tutorial/APDL_tutorial.html
in-depth online tutorial].

Please report bugs and inconsistencies in the documention! Write an
email to the [[mailto:dieter@duenenhof-wilhelm][maintainer]] or use
Google Code's [http://code.google.com/p/ansys-mode/issues/list issues
list].

== Requirements ==

The code is based on ANSYS version 14.0 and is written for GNU Emacs
and not consciously targeted for XEmacs.  It is tested with Emacs-24.1
under XP32, XP64 and under `GNU/Linux' (there also with Emacs-23.2).

Some of ANSYS-Mode's solver control and communication features are
only implemented for UNIX systems.

== Features ==

* ANSYS process management (viewing error files, license status,
  starting the ANSYS help browser, etc.)

* Solver comunication facilities, i. e. sending code fragments from
  the macro file or commands interactively to an ANSYS solver process
  (UNIX only)

* Command syntax help in the editor (similar to but more verbose then
  the ANSYS dynamic prompt) also with hints for undocumented commands

* Keyword completion of ANSYS commands, elements, get- and
  parametric-functions (case-sensitive) of nearly 2000 ANSYS symbols

* Comprehensive keyboard shortcuts for code navigation: Skipping
  comments, navigating number blocks, searching *DO-, *IF-, *DOWHILE-,
  *CREATE-blocks, etc.

* Syntax highlighting in various decoration levels (complete ANSYS
  keywords, undocumented commands, deprecated elements, ...)  and
  optionally also user defined variables (experimental)

* Overview of *every* variable definition (*GET, *DIM, *SET, =, *DO,
  CM, *VGET, ...), as well as component names, in the current file.
  These are shown in another window.  In the highest decoration level
  (2) these "user variables" are highlighted as well

* Preview and/or insertion of extensible APDL code templates.  For
  example the function template shows *all* available ANSYS
  parameteric- and get functions. The respective code snippets show
  examples of APDL work flows and considerable ANSYS know-how, these
  are easily extensible to boot.  The templates are partly interactive
  i. e. they are asking for or completing user input.

* Alignment (beautification) of whole sections with variable
  defintions

* Outlining (hiding and navigating) of code sections with Emacs'
  outline-minor-mode. With outline strings '!@' you have a heading
  structure which you can collapse or show.  This is the textual
  analog to the WorkBench tree view.

* Auto-insertion (optionally) of a header and outline code for every
  new APDL file.

* Convenient comment handling, commenting out whole paragraphs or
  whole control blocks and vice versa

* Auto-indentation of looping blocks and conditional control blocks
  together with closing of open blocks with auto-insertion of the
  appropriate end keyword (case-sensitive)

* ANSYS-Mode defines abbreviations for APDL templates i. e. with
  writing a "nickname" and a special key triggers an exchange of the
  characters with a complete code template

* You are able to use all Emacs' facilities, like the built-in
  calculator, file manager, image viewer and many others.  ANSYS-Mode
  changes some Emacs default behaviour to alleviate the transition
  from other editors and user interface standards

== Example applications ==

Visual examples you will find in the
[http://duenenhof-wilhelm.de/dieter/ansys-mode_tutorial/ansys-mode_tutorial.html online tutorial]
and the following screen-shot on [http://www.emacswiki.org/emacs/AnsysMode EmacsWiki]

http://www.duenenhof-wilhelm.de/dieter/ansys-mode.jpg

Above image shows an Emacs frame (in reversed colour mode and compiled
with the GTK+ toolkit under Linux) with a ripped off menu field.  The
APDL file is in the right window with the (experimental) user variable
highlighting switched on and a help overlay (in yellow background)
activated. The smaller windows on the left hand side are showing the
"Variable definitions buffer" of the same file and a preview buffer of
a certain code template, respectively.

== News ==

* Enhanced the documentation, included is now an introductory tutorial
  `ansys-mode_tutorial.pdf' and a hands-on tutorial
  `APDL_tutorial.pdf'

* Added a timer for getting rid of the parameter help overlays after
  some time interval (1 min) without reusing the parameter help

* Added a (customisable) variable `ansys-no-of-processors' and
  function with the same name for specifying the number of processors
  for an ANSYS multiprocessor run

* Extended mode commands, templates and removed typos mainly in
  ansys-template.el. For example added all *get functions in the
  ansys-skeleton-function template

* Switched on outline-minor-mode and auto-insertion (in default_el)

* Added a custom variable the corresponding function
  ansys-ansysli-servers for specifying the ansys interconnect license
  servers

* Added a new shortcut and menu entry isometric view

* Applied sensible defaults to ansys-lmutil-program, ansys-program and
  ansys-help-program, for most needs it should now be enough just to
  set the used ansys version (ansys-current-ansys-version, if it is
  not 140, see the example config file default_el) and maybe
  additionally the installation directory (ansys-install-directory).

== Installation ==

The version scheme is a mixture of the ANSYS release (currently 14.0)
on which the highlighting and completing code is based and the version
increments (currently .1) of ANSYS-Mode (thus 14.0.1) for this
particular ANSYS release.

=== Files ===

Sources:
* ansys-mode.el
* ansys-keyword.el
* ansys-template.el
* ansys-process.el

(and possibly their compiled versions with the suffix '.elc'.  In case
you are using the mode with an older version of Emacs than 24 please
remove the .elc files.)

Auxiliaries:
* README -- this file
* NEWS -- news and history
* TODO -- todos and deficiencies
* LICENSE -- the GPL (Gnu Puplic License) Version 3
* default_el -- configuration example file of an Emacs 'default.el'
* fontification.mac -- APDL syntax highlighting examples
* ansys-mode_tutorial.pdf -- An introductory tutorial
* APDL_tutorial.pdf -- The ANSYS-Mode hacking tutorial
* APDL_tutorial.ansys -- Hacking tutorial's supplementary APDL code

=== Short instructions ===

__For Windows systems:__

If applicable please grab the package of a pre-compiled Emacs-24.1
(Win32/64) bundled with a preconfigured ANSYS-Mode (for Windows 64
bit) at above Google Code site and unpack this archive anywhere on
your system (you do not need administrator rights).  You might
subsequently run the program addpm.exe (located in the bin directory)
to add an Emacs entry to the Windows start menu (please refer to the
README.W32 file) otherwise start the Emacs executable runemacs.exe
from there.

ANSYS-Mode is now immediately available, by opening (check out the
`fontification.mac' example) or by creating a new APDL file with a
.mac suffix.  Have fun!

Most functionalities should work but if you have not installed ANSYS
in its default installation directory on drive `C:Program Files' on
Win64 and you want to start for example 'anslic_admin' or the ANSYS
help browser directly from Emacs please adjust the configuration file
`default.el' file in Emacs' `site-lisp' directory according to the
commented code examples.

In case you want to download or have already installed the
[http://ftp.gnu.org/pub/gnu/emacs/ original version] of GNU Emacs, you
can also download and configure the ANSYS-Mode package
separately. Please see below.

__For existing Emacs installations on Windows and UNIX:__

==== Direct way; no file configuration necessary ====

Important prerequisite: Emacs must know where all the code (.el or its
compiled versions .elc) files reside!  Extract the mode archive into
an Emacs directory which is in its default load-path (a good place is
the "site-lisp" folder in your Emacs installation tree) or indicate
the directory with the environment variable EMACSLOADPATH).

From there on you must load first the mode definitions with `M-x
load-file ansys-mode RET', i. e. typing "M-x" (first) the "Alt" key
and then the "x" key simultaneously, you'll end up in the so called
Emacs minibuffer prompt, now type "load-file" (you might apply the
"TAB" key for the Emacs auto-completion feature at every intermediate
stage) and conclude this input with the "RET" key. Emacs will then
prompt you for a file, type in the directory where you have extracted
the code and "ansys-mode.el" (or better "ansys-mode.elc" for speed
reasons if the compiled version is available) and press RET to execude
the loading.  Thereafter call the mode itself with `M-x ansys-mode
RET' for every new or existing APDL file.

==== More convenient way; file configuration necessary ====

Extract the files somewhere on disc and put the following paragraph
into your ".emacs" configuration file (in your home directory), adjust
the stuff in capital letters, restart Emacs and ansys-mode will be
automatically applied for all files with suffixes ".mac", ".dat" and
".inp".

    (add-to-list 'load-path "C:\\DIRECTORY-PATH\\WHERE\\THE\\ANSYS-MODE\\FILES\\RESIDE")
      ;assuming you extracted the files on drive "c:"
      ;for example: "c:\\emacs\\emacs-23.1"
    (add-to-list 'auto-mode-alist '("\\.mac\\'" . ansys-mode))
    (add-to-list 'auto-mode-alist '("\\.dat\\'" . ansys-mode))
    (add-to-list 'auto-mode-alist '("\\.inp\\'" . ansys-mode))
    (autoload 'ansys-mode "ansys-mode" nil t)

=== Verbose instructions ===

* Direct way, no configuration necessary (loading "by hand")

Please consult the "direct way" description above.

If you are unfamiliar by these concepts I suggest working through the
build-in tutorial of GNU Emacs (you'll find it in the help entry in
the menu bar), it doesn't take too much time and the investment will
be worth it since it will accelerate your general editing capabilities
in the future.

* Permanent configuration

When it becomes tiring of loading 'ansys-mode.el' (or
'ansys-mode.elc') every time you are starting a new Emacs session, you
should specify the installation path for the mode files in your
'~/.emacs' file (the configuration file '.emacs' of GNU Emacs in your
home directory '~\').

     (add-to-list 'load-path
		  "C:\\YOUR\\DIRECTORY\\WHERE\\MODE\\FILES\\RECIDE")
     (autoload 'ansys-mode "ansys-mode" "Activate ANSYS-Mode." 'interactive)

From here you are able to type "M-x ansys-mode RET" to activate the
mode for every interesting file.

* Automatic mode assignment

When you intend to apply the mode automatically, for all files with
the extensions ".mac", ".dat", ".inp" and ".anf" ( .dat and .inp are
WorkBench's solver input file suffixes) you are opening, add the
following to your '.emacs' file:

     (add-to-list 'auto-mode-alist '("\\.mac$" . ansys-mode))
     (add-to-list 'auto-mode-alist '("\\.dat$" . ansys-mode))
     (add-to-list 'auto-mode-alist '("\\.inp$" . ansys-mode))
     ;; this is the suffix for "ANSYS Neutral Files" which include some APDL.
     (add-to-list 'auto-mode-alist '("\\.anf$" . ansys-mode))

The suffix below belongs to the "anys neutral file" export format
which contains also an APDL header and footer.

     (add-to-list 'auto-mode-alist '("\\.anf$" . ansys-mode))

* Autoinsertion of code

In case you also want to enjoy the auto insertion feature, which puts
(optionally) some predefined body of ANSYS commands to every new APDL
file insert the following into '.emacs':

     (setq auto-insert-mode 1)
     (setq auto-insert-query t) ;insert only after request
     (add-to-list 'auto-insert-alist '(ansys-mode . [ansys-skeleton-compilation]))

* Autoloading of helper functions

With below section you are also able to use certain ANSYS related
commands in a new Emacs session without the need of previously having
explicitely called ansys-mode.

     (autoload 'ansys-customise-ansys "ansys-mode" "Activate the function for calling a special ANSYS customisation buffer." 'interactive)
     (autoload 'ansys-abort-file "ansys-mode" "Activate the function for  aborting ANSYS runs." 'interactive)
     (autoload 'ansys-display-error-file "ansys-mode" "Activate the function for inspecting the ANSYS error file." 'interactive)
     (autoload 'ansys-start-ansys-help "ansys-mode" "Activate the function for starting the ANSYS help browser." 'interactive)
     (autoload 'ansys-license-status "ansys-mode" "Activate the function for displaying ANSYS license status or starting a license utility." 'interactive)

* A further configuration method

As a summary and example to these and further customisation options
please have a look at the accompanying "default_el" example. This is
helpful especially if you intend to use the mode's solver
communication capabilities.  This file can be used, after renaming it
to "default.el" and adjusting as as system wide startup file for Emacs
in the "EMACS_INSTALLDIR/site-lisp" directory and is therefore an
alternative to customisations in ".emacs", your personal configuration
file.

== Usage and customisation ==

When you have a file under `ansys-mode' check out the menu bar's
"ANSYS" entry for its possibilities and select the entry "Describe
ANSYS Mode" or type "C-h m" (i. e. the CTRL key together with the "h"
key and subsequently the "m" key), which will display the ANSYS-Mode
help which is your "online" guide for its usage, keybindings and
customisation options.

Templates, i.e. code snippets or so called skeletons might be extended
in "ansys-template.el" and can be used similarly or complementarily to
a classical ANSYS macro library.

== Experienced Emacs users ==

ANSYS-Mode changes the default behaviour of Emacs

globally:

* Switches on font-lock-mode if toggled off, e.g when calling Emacs with
  the -D (basic display) option
* Activated Delete Selection Mode (delete-selection-mode t)
* Activated Show Paren Mode (show-paren-mode t)
* Advised M-w (kill-ring-save) without active region to copy the whole line

(Delete Selection Mode can be switched off in the ANSYS-Mode menu.)

locally:
* (setq scroll-preserve-screen-position t)
* Changed M-h (mark-paragraph) to move the cursor to the end of the region

== Acknowledgements ==

* Tim Read
* Geoff Foster

For their ansys-mod.el from 1997 which gave the idea to ANSYS-Mode
(the implementation is different and vastly extended)

Then in mainly reversed cronological order:

* Ilya Gurin
* Alex Schroeder
* Holger Sparr
* Eli Zaretzki
* Markus Triska
* Mathias Dahl
* rms

== Resources ==

* The [http://www.emacswiki.org Emacs Wiki]
* A general [http://www.ansys.net  ANSYS macro repository] (ansys.net)
* The [http://www.ansys.com ANSYS homepage]
* Xansys, an [http://www.xansys.org ANSYS online community] (registration necessary for the forum)
* Another APDL [http://www.padtinc.com/pedal  script editor]

== Bugs and Problems ==

For an overview of the outstanding issues please have a look at the
TODO file.

The "user variable" highlighting is still experimental, newly edited
variable definitions are taken into account only when the variable
ansys-dynamic-highlighting-flag is set (for very large files this
slows Emacs and this flag is only implemented for ".mac" files) or any
times when you activate the variable display (with C-c C-v) and the
maximum highlighting level.  If not already the case try to use the
code in compiled form, please have a look at the documentation of the
Emacs function `byte-recompile-directory'.

ANSYS "format line" (multi-line highlighting) and "user variable"
highlighting (when the mentioned flag above ist not set) are somewhat
brittle, please use M-o M-o to update the fontification in case the
format line and all variables are not highlighted correctly.

=== Getting help ===

If you experience problems installing or running this mode you have
the following options:

* Write an email to the mode maintainer (you can trigger a bug report
  from the menu or directly calling the function
  `ansys-submit-bug-report'.  Even when you are not in the position of
  sending emails from Emacs this will give at least a useful mail
  template with valuable information about internal mode settings).

* When you have already a (cost free) Google account you are able
  to issue a bug report at the [http://code.google.com/p/ansys-mode/issues/list Google Code site].
  From this site you can download the latest development version.

* It might be interesting for you to visit the
[http://www.emacswiki.org/cgi-bin/wiki/AnsysMode Emacs Wiki].
At the Wiki you can add some comments or wishes without registration.

local variables:
word-wrap: t
show-trailing-whitespace: t
indicate-empty-lines: t
end:
