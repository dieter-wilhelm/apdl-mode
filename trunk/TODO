* Bugs and deficiencies:
** Parameter help: cm is shadowed by cmblock

** Highlighting: % and & operators in comments 

** Completion: Functions are not completed with parenthesis (`sin(')

** Completion: c*** command is not completed

** M-j: When there is already a `&' in a format command M-j
   inserts a redundant one

** Setup: ansys-is-unix-sytem must be set for helper functions when
   ansys-mode is not yet invoked like -license-status!
   -check-sytem-type

** Highlighting: User variable highlighting
   does not take into account: a.) a clearing of variables and b.)
   usage of variables before their definitions (uninitialised
   variables) c.)  the variable fontification might clash with Ansys
   specifiers d.)  string substitution of %variables% in in strings
   does not highlight them in the variable font

* v12.0.1:
** workload
- bugs
*** features?
- insert skeleton with C-c C-s i, send line C-c C-c ccc
*** miscellaneous
- C-c C-v does not show variable defined in the first line with = 

- strange warning when -license-file is not set

- C-c C-s not working

- Ansys mode with cua- and delete-selection-mode? 
  deleting with delete-selection-mode does not copy to kill-ring
  
- function for searching the job name -abort-file -display-error-file
  file-exists-p working with $PATH or full function name only?  is
  ansys a valid executable or rather ansys120?

- -is-unix-sytem must be set for helper functions when ansys-mode is
  not yet invoked like -license-status!  -check-sytem-type

- update, restructure -mode-help

- TODOs, FIXMEs in the code

- omission in fontification.el: c*** highlighting, harmless?

- condensed input line ($) behind commands without arguments possible?

- Are characters behind unique commands shorter than 4 characters
  possible? /sol(u) sufficient?  have a look in
  -variable-defining-commands!  Warn when - unintentionally -
  arguments are used for Ansys commands which do not allow arguments.
  Or implement some auto-newline feature?  But problematic in
  condensed command lines or when applying code comments!

- *goto :branch with character labels such as :1 or :_2 possible?

- file coding is unix problematic for window systems?

- load or load-file, what happens with compilation and autoload?

- check whether all undocumented commands are still working in v12

** general release procedures

README -- installation (Emacs Wiki) and accompanying files
mode-help -- usage & configuration

- update the mode help
  complete skeleton menus.
  update defcustom list in ansys-submit-bug-report
  update version numbers, default names (tags-query-replace 120 130)
  checkdoc
  then dry run: Emacs 23.1 -Q testing: fontification,padt.mac /*commands
  and default command lines, every menu entry.
  byte-compile-file
  then dry run
  profiling, major mode conventions: multiple loading of this
  mode?.

- update Emacs wiki (README), Google Code with download package, home
  page update all version numbers everywhere: Emacs wiki, Google Code
  with download, home page, elpa?

- publication emails (with image and news): ANSYS.net (Ansys !!!
  Sheldon Imaoka <sheldonimaoka@yahoo.com>), CadFem (Stephan Gotthold
  sgotthold@cadfem.de, Nelson <tnelson@cadfem.de>, Hanke , Krueger
  <lkrueger@cadfem.de>), Alwin Perras
  <alwin.perras@continental-corporation.com>, AnsysWB community, Ansys
  users club <tom.tumbrink@t-online.de> <admin@auc-ev.de>, the Focus
  guys (PADT) <info@padtinc.com>, Holger Sparr
  <sparr@mfkrs1.mw.tu-dresden.de>. Razvan.Curtean@continental-corporation.com

- Emacs package repository, elpa http://tromey.com/elpa/?

- Emacs installation archive for Ansys under XP, default.el in
  site-lisp dir and byte-compiled ansys-mode?

** schedule

*** presentation
-- Very brief introduction: Emacs, why not?  Free, working on all
   current OSs.  All bells and whistle of a modern editor (drop file
   into E).  Chosen because with Vim, Emacs is the best editor of all,
   but Especially on Windows Programmed before Microsoft was even
   founded, Drawbacks of Emacs, need of getting used to it C-c, C-v,
   C-x, C-y, C-z CUA-mode examples: (setq
   scroll-preserve-screen-position t) (delete-selection-mode t)

-- casual APDL file viewer (whetting the appetite)
   convenience features?
   syntax fontification, especially variable highlighting
   Ansys menu
   command-help   M-n/p M-?
   code navigation (number blocks in .inp) C-c {

-- APDL hacking
   mouse selection ->copy to clipboard
      C-c C-u, C-c C-c
   $ needs space(s)?
   ansys completion and emacs expansion C-c ] -- -close-block
   ,commands
   colon loop: e.g.: lfillt,(1:3),(2:4),Rad, lesize,(1:5:2),Esize
   preview insert skeletons (alternatively abbrev mode?)
   display user variables
   *go not for interactive mode! -> *if *else *endif
   commenting out
   selecting blocks C-M-a/b setting mark!
   loading help navigator
   display license status	-license-status C-c C-l

-- hardcore Ansys/APDL user <- Linux Notebook/machine
   switch off menu, tools, scroll-bar
   Ansys mode help
   Emacs-calc
   online Ansys/Emacs process and debugging environment
   C-c C-u, C-c C-c,  C-c C-q
   tail mode of *.err C-c C-e
   abort file
   positions -> in bookmarks/registers/clone buffer?
   C-c @ outline stuff with indirect-buffer

Conclusion/Summary?

* Further versions

** Parameter help and documentation
- count number of user variables when displaying them

- documentation in info format, refcard, etc; Emacs help guidelines
  GNU programming guideline: More requires?,

- indicate replacement of standard Emacs facilities (e. g M-C-n,
  M-C-p, M-h)
  
- display alternatives to/swap deprecated element types

- M-? the command help does not work when there are solver ignored
  characters behind the unique command name, example: *VWROOOO.

- M-? Provide also help for commented out commands

- M-?: following a variable allocation with `='

- Provide Ansys command completion and command-help in comint buffer

- trigger a timer when showing the ansys-comand-parameter-help

- Include the _RETURN value of the solid modelling
  commands into their help strings of parameter help.  

** Ansys interpreter buffer
   example: gnuplot-mode

- read env, try to ask only for the installation directory for the
  ansys-license-file, -program, etc.  variables.  Read some
  information from getenv.  read ansys-license-file from env, supply
  sane standard Ansys values for the helper programs and check for
  existance

- make filter of -license-status optionally  

- optimise -start-run with query of y (start immediately),n (exit),e
  (change params),C-h (help)

- C-c C-q sequences are not shown (and stored) in the comint buffer

- Splice any input line behind the BEGIN: symbol in the *Ansys* buffer

- Enable one run for every Ansys macro buffer

- substring-no-properties necessary? Does not seem to be the case...


- Ansys process status is not working properly process-sentinel or
  some comint-hook?  check for EXIT command and wait some time to
  update the mode line run status correctly

- indicate with activation/inactivation of menu items that an
  asynchronous job is already running or not.

- show/mark sent lines in apdl file C-c C-u, C-c C-c,
     o with fringes
     o with background
     o maximum line
     o reset highlighting, when?

- provide Ansys `y' request and carriage return? superflouous?
     a single `y' does the trick

- Killing a buffer with a running process now asks a confirmation.
   You can remove this query in two ways: either removing
   `process-kill-buffer-query-function' from
   `kill-buffer-query-functions' or setting the appropriate process
   flag with `set-process-query-on-exit-flag'.

- finding an Ansys /filnam command in current macro file and
  suggesting this as current job-name optionally kill old job when
  called again with working run warn and optionally remove the ansys
  lock file before starting a run

** Skeletons and abbrevs

- make outline string in skeletons configurable

- spider beams, _bolt.mac, screw.mac, Mohr-Coulomb criterion

- rework concept with respect to the Ansys menu structure sort
  skeletons in menu. Concept: 1.) Ansys Workflow 2.) specialised macro
  library

- Make skeleton-header properly working (info "(autotype)")

- Optimise templates: completing-read, read-from-minibuffer

- abbrev `d does not indent properly in another block level

- Implement choice when completing *IF commands (*ELSEIF or *ENDIF
  ?THEN?).

- Warn when including skeleton in read only file.

- skeleton for numbering ansys-skeleton-numbering-controls
  (skeleton-insert docu)

- suggestions with auto-completion of kp,line,area,volu,node,elem,tabn,sval

- negation, what negation? TODO:

- skeleton for skipping code *if,then *else*endif if selection: wrap
  around and indenting *go/*if label is not fontified at the command
  line (restriction of 7 characters with out the colon.)
  must *go:label be unambiguous?

** Miscellaneous
- Make Ansys mode also working solely with ansys-mode.el

- make M-C-h more intelligent like M-h (if mark...)

- speed concern: replace -find-duplicate-p with function argument to
  add-to-list

- For non-comint-mode usage: display .log file with tail mode

- is outline-mode enabled? no! make default?, outline

- C-c C-c skips empty lines and comments this is not always
    desirable -> make this optional -> filter process input?

- take care when region isn't complete in -send-to-ansys (send whole line)

- take care of setup procedure: v110/ansys/apdl/start110.ans
  /MPLIB,READ,/ansys_inc/v110/ansys/matlib

- C-c C-v show (optionally) only variables defined up to current
  cursor line

- C-j is not skipping to `,' whith default command (from second line
  onwards)!

- removing/renaming abort file?

- undocumented ask parameter

- mode-line-format nil);no mode line for this buffer Unambiguous

- Emacs: old-style backquotes?  used in the old template macro system

- create is only completed by *end

- completion of function names: cursor should end within parentheses

- better hints for auto-insertion features

- up/down-block when we are over a begin-keyword and in a block-end
  line

- component names are fontified as variables! separate them cmlist?

- format string for *VWRITE: line(s) below, in parens, when FORTRAN
  format specifiers are used, keyword SEQU povides row numbers, up to
  19 parameters are allowed

- remove vestiges of ansys-mod.el for making ansys-mode.el GPL proof.
  Check whether octave-mod.el really is GPL compliant, use
  -ctave-mod.el from 1997, kill octave-mod.el afterwards in makefile
  read every symbol docu string ->NEW_C or _C or OCTAVE_C

- replace/extend column-ruler with ruler-mode or ruler implemented as
  overlay in buffer

- make everything completely customisable, eg auto-insert stuff
  customisable enable, Emacs customisation of auto-insert-query

- Fontify *completion list* distinguishing elements: commands,
  functions and keywords.

- provide a list of options for the -license function, set this
  function in the defcustom lmstat -a etc.

- make the line number display in `ansys-display-variables'
  (hyper-)links to the corresponding code line in the respective APDL
  file.  (See `occur' function.)  Or use the imenu mechanism for this
  and display the variables in the speedbar

- auto-indent-switch as defcustom?

- inhibit the unnecessary blink-matching-block display when closing a
  block behind a block-end keyword

- highlight matching block keywords (similar to show-paren-mode) when
  point is at keyword

- Implement highlighting of bracket pairs with the correct level in
  Ansys GET- and parametric- functions.

- highlighting of plot commands inside the /GCMD command

- DEFSUBSTs with DEFUNs inside aren't particularly helpful?

- Emphasise better implied (colon) loops n,(1:6),(2:12:2) => n,1,2 $
  n,2,4 $... (little used, I know, but any ideas going beyond the
  colon?).

- startup screen for Ansys mode: Mode help, Ansys version, supressing
  the startup screen 'ansys-mode-startup-message maybe as advice when
  sluggish -> compiliation

- Enable choice for /show,3d or x11 (-start-graphics)

- generalise -insert-pi in code line ($ PI=...), in comment (\n
  Pi=...)

** Ansys syntax restrictions not (yet) accounted for
- *set parameter strings may only be 32 character long!

- Character parameters are restricted to only 8 characters.

- *MSG command can only have 9 additional continuation lines

- Code line restriction of 640 characters

- Block level restriction of 20 levels of nested *DO loops (except
  with /INPUT and *USE)

- Block level restriction of 10 levels of nested *IF blocks

- Macro level restriction: 20 macros

** unknown Ansys stuff

- what the heck is the *UILIST command?

- Is hyper56 a valid element?

** additional macro resources

see www.apdl.de for further ideas and extensions


# local variables:
# mode: outline
# end:
