
!! ------------------------------
!@ --- header ---
!! ------------------------------
!! Time-stamp: <2012-06-22 16:42:24 uidg1626>
!! NOTE: This is APDL pseudo code, checking
!!  ANSYS-Mode's highlighting capabilities and
!!  certain aspects of the language
!!  Please see further below.

/units,mpa !indicate mm-t-s unit system
!@ --- Preprocessing ---
/prep7
!@@ -- Elements --
Steel = 1
ID = Steel
real = Steel
et,ID,solid186 !3d, 20 node
!@@ -- Material --
mp,nuxy,Steel,0.3 ! Poisson No
mp,ex,Steel,200000 ! Elastic modulus
!@@ -- Modeling --
block,0,1,0,1,0,1
!@@ -- Meshing --
vmesh,all
!@@ -- BCs, Loads --
nsel,s,loc,x,0
d,all,all
nsel,s,loc,x,1
d,all,uy,-.1
allsel
save
!@ --- Solving ---
/solu
solve
!@ --- Postprocessing --
/post1
/view,,1,1,1
plnsol,u,sum,2
/image,save,test !save XWindow Dump xwd (or bmp on Windows)
/image,capture                !TODO: what is this: file0001.xwd?
/sys,convert test test.png
/upwind                  !TODO: 2d-graphics library? dated?
*fft                     !TODO: :-)

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!  Please put the the cursor below the next paragraph of emacs lisp
!!  code and type "C-x C-e" to change the setting of
!!  `ansys-highlighting-level' and `ansys-dynamic-highlighting-flag'
!!  change the level from 0 to 2 and toggle the flag from `t' to
!!  `nil'.  Browse the file to check the differences.

! this is the lisp code
  (progn
    (when
        (featurep 'ansys-mode)
      (unload-feature 'ansys-mode))
    (setq
     ansys-highlighting-level 2
     ansys-dynamic-highlighting-flag t)
    (load-file "ansys-mode.el")
    (ansys-mode))

!@@ -- Ignored characters and condensed input line ($ operator)
finishThisNightmare $ /cle !/clear
f $ fi $ fin $ fini $ finis  $ finish $ finisher

!@ --- ANSYS-Mode is highlighting APDL specials ---

!@@ -- Reserved words and _RETURN statements --

!!
N      =  _RETURN       !return value of certain commands
Alpha2 =  +360./(2*N)
Xc     =  !empty rhs clears variables

*return                  !TODO: what is this?
*status,_RETURN          !0 normal
                         !1 note
                         !2 warning
                         !3 error
                         !4 fatal

!@@ -- Old style APDL comments --

var1 = sinh(cos(3 *5)) ! old style Ansys comment!!!!!
var2 = sinh(cos(3*5))  ! this is valid code
fini * comment
otto = 3 * 4 comment, the value of otto = 3!
!!

!@@ -- Ignored characters behind commands --

f $ fi $ fin $ fini $ finis  $ finish $ finisher
!!

!@@ -- End Of File command --

/eof --- WARNING: /eof crashes the Ansys GUI in interactive mode ---
!!

!@@ -- function names --
Pi=acos(-1) $ True=1 $ False=0 $ Nn=3.1
Alpha1 = rotx( 14.5) - 360./ (2*Nn)

!@@ -- Ignored characters behind commands --

f $ fi $ fin $ fini $ finis  $ finish $ finisher
a $ al $ all $ alls $ allse $ allsel $ allselllllll
rectngaaaaa,var1,_X2,var2,X2 ! 2d rectangle
!!

!@@ -- End Of File command --

/eof --- WARNING: /eof crashes the Ansys GUI in interactive mode ---
  /exit,nosave           !default is save the model data
!!

!@@ -- Current element types & deprecated elements

!! A current element type:
et,10,solid186
!! deprecated element types:
et,Steel,beam3 $ et,Alu,shell91
!!

!! Complete the following element fragments to current ones!
!!
et,Steel,beam $ et,Alu,shell

!@@ -- default commands
nsel,s,loc,y,0
    ,a,loc,y,1
    ,r,loc,x,0
d,all,all

!@@ ::: implicit : (colon) looping :::::
!! (n1:n2:dn)
lfillt,(1:2),(3:4),5
!! one subscript per array
bf,(1:10),temp,Tarray(1:10)
b(1:5) = 10,20,30,40,50 !TODO: creates this an array?
!! The *get command and get functions are allowed
*get,Fx(1:10),node,(1:10),f,fz !TODO:
a(1:5) = nx(1:5)
!! TODO:
Fx(1:10) = (1:100:10)    !is this working? :-)
!! alternative to *vfill
*vfill,Fx,ramp,1,10

!! looping
*get,Dim
*if,Dim,le,1,then
  *dim,Reaction,array,Ns,1
*endif
*do,I,1,Ns
  set,Ls,I
  fsum
  *get,Fx,fsum,,item,fx
  Reaction(I)=Fx
*enddo

!@@ -- multiline *msg formatting with the & operator
*MSG,UI,Vcoilrms,THTAv,Icoilrms,THTAi,Papprnt,Pelec,PF,indctnc
Coil RMS voltage, RMS current, apparent pwr, actual pwr, pwr factor: %/ &
Steel = %G A (electrical angle = %G DEG) %/ &
_Power factor: %G %/ &
Inductance = %G %/ &
VALUES ARE FOR ENTIRE COIL (NOT JUST THE MODELED SECTOR)

c***,**************************************************
!@ --- APDL Reference ---
c******************************************************
!! the comma behind `c***' is not necessary, one example of the many
!! APDL peculiarities, which are not documented!

!@ --- Defining parameters ---
!@@ -- Variable names --
!! Must begin with a letter or an underscore

1ansys = 3                    !is not a valid variable name
a1nsys = 3                    !a1nsys is a valid variable name
A1NSys = 4                    !this is the same variable
A1NSys = Temp                 !`Temp' is not defined

!! Should not begin with an underscore

_ansys = 3   !`_ansys' represents a reserved variable in ANSYS supplied macros
_ = 3        ! a single underscore definition is valid
X = _
_ = 3 !the single underscore represents  also a `variable' in APDL

!! Variable names with a trailing underscore

ansys_ = 3              !this is a `hidden' variable from *status
*status                 !does not show `ansys_'
       ,PRM_            !show variables with trailing underscore
*del,,PRM_              !delete all variables with trailing underscore

!! Must contain only letters, numbers and underscores

!! only letters, numbers and underscores are allowed
a1n§sys = 3              !this is not a valid variable name
a1n_sys = 3              !this is a valid variable name

!! Must contain no more than 32 characters

!! The following is not a valid variable name
v23456789_123456789_123456789_123 = 3
!! The following is a valid variable name
v23456789_123456789_123456789_12  = 3

!! Local Variables

Depth  =  ARG1 !ARG{1-9}, AR{10-19} = "*use" variables
AR18 = AR19
*stat,argx

!@@ -- Character strings --
!! Must not contain more than 32 characters

! character string variables are enclosed with `''
Yc = '012345678901234567901234567890123' !not a character variable any more
Symetry = 'yes'

!@@ -- Erasing variables from memory --

!! defining
Scalar = 3               !the `=' assignment is a shorthand for `*set'
*set,Scalar,4            !reassignment
*set,Vector,1,2,3,4,5,6,7,8,9,10
Vector = 0,1,2,3,4,5,6,7,8,9,10,11,12 !TODO:
Vector = 4               !TODO:
!! deleting
Scalar =     !this is not a variable any more
*set,Scalar               !alternative to `Scalar ='
*del,all                 !delete all variables!
*del,Vector   !TODO:

!@@ -- Variable substitution with `%' --

!! Substitution of Numeric Variables

Steel = 1
/com,Material %Steel% is steel
!! ATTENTION: in the following situation!
/com,%Steel% does NOT substitute variable Steel
/com, %Steel% does substitute variable Steel
/com,Stuff like %Steel+1% returns 2

!! Substitution of Character Variables

R='RESUME'
%R%,MODEL,DB

!! string, message commands and comment behaviour && %$$% %% :bla: &&&

/com, bla = %bla%
igesin,'test','%iges%'
/title,Nothing in %particular%
!! in "string commands" are no code comments possible
/com,beam3 %YES% ! this is *really not commented out!!!! &
c*** *beam3 !otto *otto %neither% here !!!!!!! &
/com, bearm laskf %otto% !%otto% we are here

right = 'wrong'
/title, the value of right is  %right%
/com, this is %right%: /com does expand parameters as well

right = 9
c***,this is %right%: c*** allows no parameter expansion
/sys,ls "*.mac" %otto% &
/syp,ls, %otto% !TODO: is this working?

!! Dynamic Substitution of Numeric or Character Variables

Case = 'case 1'
/title,This is  %Case%
                         !/stitle
                         !*ask
                         !/tlabel
                         !/an3d
                         !in tables TODO:
aplot
Case = 'case 2'
!! not necessary to reissue /title, "This is case 2"
!! will appear on subsequent plots
aplot

!! Exponentiation Operator is `**'

!! Beware of the oldstyle ANSYS comment!

var1 = sinh(cos(3 *5)) ! old style Ansys comment!!!!!
var2 = sinh(cos(3*5))  ! this is valid code
fini * comment
otto = 3 * 4 comment, the value of otto = 3!
!!

!! Operators: `<' and  `>' :TODO

otto = 1.82
karl = 1.97
margret =  otto < karl
maria = karl < otto
*status,karl < otto

!@@ -- Arrays --

!! Specifiying array element values

!! APDL Math

No = 100
Pi = acos(-1)
Dat = cos(0:2*Pi:(2*Pi/No))+ cos(0:2*Pi*10:(2*Pi/No))
Dat = 0:2*Pi:2*Pi/No
*vfun
*vec,import,apdl,Dat
*fft,Forw,Dat,OutDat,,,Full !what's the difference?
*fft,    ,Dat,OutDat,,,Part !what's the difference?
*export,OutDat,apdl,APDLOutDat

debug                    !TODO: undocumented?

PDEXE, Slab, MRUN, NFAIL, FOPT, Fname
in V11: *mrun                    !TODO:

!undocumented commands are highlighted differently
/xml                     !undocumented command /xml
/xfrm                    !documented command   /xfrm

!@@ --! multiline message format command this is tricky: use M-o M-o
*MSG,UI,Vcoilrms,THTAv,Icoilrms,THTAi,Papprnt,Pelec,PF,indctnc
Coil RMS voltage, RMS current, apparent pwr, actual pwr, pwr factor: %/ &
Steel = %G A (electrical angle = %G DEG) %/ &
_Power factor: %G %/ &
Inductance = %G %/ &
VALUES ARE FOR ENTIRE COIL (NOT JUST THE MODELED SECTOR)
aldk this is not any longer in the *msg format construct
/com this is not any longer in the *msg format construct

*vwrite,B(1,1),B(2,1),%yes%
alkd %D &
%E%/%E

!! commands which do not allow arguments
/prep7 $ FINISH !$ means nothing behind
/prep7 !still nothing behind
/prep7 * old style comment, this is allowed
/prep7 this is an error

nsel,s,loc,x,1
nsel = 3  !you CAN have variable names clashing with commands

!@@ -- Goto branching --
*go,:branch
aselsalsdkfjaölsdkfjaölskdjf,all
:branch

!-----------------------------------------------------------------------
! mdlbl.mac
! Puts Modal Info on Plot
!-----------------------------------------------------------------------
/post1
set,last
*get,nmd,active,,set,sbst
pfct= $ ffrq= $ adir=
nsel,s,l

*dim,pfct,,nmd,6
    ,
    ,ffrq,,nmd
    ,adir,char,nmd


adir(1) = 'X','Y','Z','ROTX','ROTY','ROTZ'
*stat,adir
*do,i,1,nmd
  *get,ffrq(i),mode,i,freq
  *do,j,1,6
    *get,pfct(i,j),mode,i,pfact,,direc,adir(j)
  *enddo
*enddo
/annot,delete
/plopt,info,0
/plopt,minm,off
/triad,off
/erase
iadd = arg1
*if,iadd,eq,0,then
  iadd = 1
*endif
/tspe,15,1,1,0,0
/TSPE, 15, 1.000,   1,   0,   0
xx = 1.05
yy = .9
!  Change the window settings if you need different 
!  aspect ratios for your geometry
/win,1,-1,1,.5,1
    ,2,-1,1,0,.5
    ,3,-1,1,-.5,0
    ,4,-1,1,-1,-.5
!
/win,2,off
/win,3,off
/win,4,off

*get,vx,graph,1,view,x
*get,vy,graph,1,view,y
*get,vz,graph,1,view,z
*get,va,graph,1,angle
*get,vd,graph,1,dist
*do,i,2,4
  /view,i,vx,vy,vz
  /dist,i,vd
  /angle,i,va
*enddo

*do,i,1,4
  ii = i - 1 + iadd 
  set,1,ii
  plnsol,u,sum
  *if,i,eq,1,then
    /noerase
  *endif
  /win,i,off
  *if,i,ne,4,then
    /win,i+1,on
  *endif
*enddo
*do,i,1,4
  ii = i - 1 + iadd
  /TLAB, xx, yy  ,Mode: %ii%
  yy = yy - .05
  /TLAB, xx, yy,Freq: %ffrq(ii)%
  yy = yy - .05
  *do,j,1,6
    /TLAB, xx, yy  ,PF %adir(j)%: %pfct(ii,j)%
    yy = yy - .05
  *enddo
   yy = yy -.11
*enddo
/erase
/annot,delete
sz = .8
xloc = 0
yloc = 0

*dim,data,,5
data(1) = 12,15,28,10,32
hsz = sz/2

/pspec,0,1,1
/poly,4,xloc-hsz,yloc-hsz,1.8*(xloc+hsz),yloc-hsz,
         1.8*(xloc+hsz),yloc+hsz,xloc-hsz,yloc+hsz

x0 = xloc + hsz
y0 = yloc + .7*hsz
lof = .05

*vscfun,dsum,sum,data(1)
/LSPE, 15, 0, 1.000
/TSPEC, 15, 0.700, 1, 0, 0
ang1 = 0
*do,i,1,5
  ang2 = ang1 + (360*data(i)/dsum) 
  /PSPE, 2*i, 1, 1 
  /PWED, xloc,yloc,sz*.4, ang1,ang2 
  /poly,4,x0,y0,x0+lof,y0,x0+lof,y0+lof,x0,y0+lof 
  pvl = 100*data(i)/dsum 
  /tlab, x0+1.5*lof,y0, %pvl% % 

  y0 = y0 - 1.5*lof 
  ang1 = ang2
*enddo
/eof
