# -*- mode: org -*-
#+TITLE:  Tutorial
######################################################################
#+AUTHOR:    H. Dieter Wilhelm
#+EMAIL:     dieter@duenenhof-wilhelm.de
##+DATE:      2012-06-17 Sa
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   email:t H:5 num:nil toc:1 \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:t ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+PROPERTY: tangle yes
#+LaTeX_CLASS: koma-report
##+LaTeX_CLASS: koma-article
##+LATEX: \tableofcontents
#+LATEX_HEADER: \usepackage{scrpage2}
#+LATEX_HEADER: \titlehead{\includegraphics[width=15cm]{ansys+emacs.png}}
#+LATEX_HEADER: \subject{ANSYS-Mode}
#+LATEX_HEADER: \subtitle{APDL and Syntax Highlighting}
#+LATEX_HEADER:\areaset{15cm}{25cm} %textarea on page
#+LATEX_HEADER:\pagestyle{scrheadings}
#+LATEX_HEADER:\ifoot{\author}
#+LATEX_HEADER:\ofoot{\includegraphics[width=3cm]{ansys+emacs.png}}

##+TEXT: This is still a work in progress, good documentation is hard work!
##+TEXT: Please report remaining faults.

* ANSYS-Mode Syntax Highlighting Tutorial
** TODO Merge fontification.org with APDL_tutorial.org


#+BEGIN_LaTeX
  \definecolor{dkgreen}{rgb}{0,0.5,0}
  \definecolor{dkred}{rgb}{0.5,0,0}
  \definecolor{gray}{rgb}{0.5,0.5,0.5}
  \lstset{frame=none, %leftline
    basicstyle=\ttfamily\bfseries\footnotesize,
    morekeywords={virtualinvoke},
    keywordstyle=\color{dkgreen},
    ndkeywordstyle=\color{red},
    commentstyle=\color{dkred},
    stringstyle=\color{orange},
%   numbers=left,
%    numberstyle=\ttfamily\tiny\color{gray},
%    stepnumber=1,
%    numbersep=10pt,
    backgroundcolor=\color{white},
    tabsize=4,
 %   showspaces=false,
%    showstringspaces=false,
    xleftmargin=.23in
  }

\lstdefinelanguage{ansys}
  {
  morecomment=[l]{!},
  morecomment=[l]{\ *}, % olds style comments
  morestring=[b]',
  sensitive=false,
  morekeywords={nsel,et,mp,block,d,vmesh,allsel,save,solve,plnsol,finish,
     aplot,eplot,igesin,set,lfillt},
  otherkeywords={*MSG,*if,*do,*enddo,*dowhile,*create,*end,*endif,/title,/com,
    /units,/prep7,/solu,/post1,/post26,/eof,/image,/sys,*afun,/view,c***,*get,
   *msg,/xfr,*vwrite,*go,*dim,*stat,/annot,/plopt,/triad,/erase,/tspe,/win,
   /tlab,/erase,/annot,/pspe,/pwed,/poly,*vscfun,/tlab},
}

#+END_LaTeX  
   
** Header
#+begin_src ansys
  !! ------------------------------
  !@ --- header ---
  !! ------------------------------
  !! Time-stamp: <2012-06-22 16:42:24 uidg1626>
  !! NOTE: This is pseudo code, checking
  !!  ANSYS-Mode's highlighting and its
  !!  ansys-highlighting-level.  Please put the
  !!  the cursor below the next paragraph and type
  !!  C-x C-e to activate the settings
#+end_src

#+begin_src ansys
  /units,mpa !indicate mm-t-s unit system
  !@ --- Preprocessing ---
  /prep7
  !@@ -- Elements --
  Steel = 1
  ID = Steel
  real = Steel
  et,ID,solid186 !3d, 20 node
  !@@ -- Material --
  mp,nuxy,Steel,0.3 ! Poisson No
  mp,ex,Steel,200000 ! Elastic modulus
  !@@ -- Modeling --
  block,0,1,0,1,0,1
  !@@ -- Meshing --
  vmesh,all
  !@@ -- BCs, Loads --
  nsel,s,loc,x,0
  d,all,all
  nsel,s,loc,x,1
  d,all,uy,-.1
  allsel
  save
  !@ --- Solving ---
  /solu
  solve
  !@ --- Postprocessing --
  /post1
  /view,,1,1,1
  plnsol,u,sum,2
  /image,save,test !save XWindow Dump xwd (or bmp on Windows)
  /image,capture 		!TODO: what is this: file0001.xwd?
  /sys,convert test test.png
  /upwind                  !TODO: 2d-graphics library?
  *fft                     !TODO: :-)
#+end_src

#+begin_src ansys
  !!  Please put the the cursor below the next paragraph of emacs lisp
  !!  code and type "C-x C-e" to change the setting of
  !!  `ansys-highlighting-level' and `ansys-dynamic-highlighting-flag'
  !!  change the level from 0 to 2 and toggle the flag from `t' to
  !!  `nil'.  Browse the file to check the differences.
#+end_src

#+begin_src lisp
  (progn
    (when
        (featurep 'ansys-mode)
      (unload-feature 'ansys-mode))
    (setq
     ansys-highlighting-level 2
     ansys-dynamic-highlighting-flag t)
    (load-file "ansys-mode.el")
    (ansys-mode))
#+end_src


!! ------------------------------
/units,mpa !indicate mm-t-s unit system
c
#+begin_src ansys
!@@ -- Ignored characters and condensed input line ($ operator)
  finishThisNightmare $ /cle !/clear
  f $ fi $ fin $ fini $ finis  $ finish $ finisher
#+end_src

** Highlighting APDL specials
#+begin_src  ansys :exports none
!@ --- ANSYS-Mode is highlighting APDL specials ---
#+end_src
*** Reserved words and _RETURN statements
#+begin_src ansys :exports none
!@@ -- Reserved words and _RETURN statements --
#+end_src
#+begin_src ansys
  !!
  N      =  _RETURN       !return value of certain commands
  Alpha2 =  +360./(2*N)
  Xc     =  !empty rhs clears variables
#+end_src
*** _RETURN values of macros
#+begin_src ansys
  *return                  !TODO: what is this?
  *status,_RETURN          !0 normal
                           !1 note
                           !2 warning
                           !3 error
                           !4 fatal
#+end_src    
***  Old style APDL comments
#+begin_src ansys :exports none
!@@ -- Old style APDL comments --
#+end_src
#+begin_src  ansys
var1 = sinh(cos(3 *5)) ! old style Ansys comment!!!!!
var2 = sinh(cos(3*5))  ! this is valid code
fini * comment
otto = 3 * 4 comment, the value of otto = 3!
!!
#+end_src
*** Ignored characters behind commands
#+begin_src ansys :exports none
!@@ -- Ignored characters behind commands --
#+end_src
#+begin_src  ansys
f $ fi $ fin $ fini $ finis  $ finish $ finisher
!!
#+end_src
*** The End Of File command
#+begin_src  ansys :exports none
!@@ -- End Of File command --
#+end_src
#+begin_src  ansys
/eof --- WARNING: /eof crashes the Ansys GUI in interactive mode ---
!!
#+end_src

#+begin_src ansys
  !@@ -- function names --
  Pi=acos(-1) $ True=1 $ False=0 $ Nn=3.1
  Alpha1 = rotx( 14.5) - 360./ (2*Nn)
#+end_src

*** Ignored characters behind commands
#+begin_src ansys :exports none
!@@ -- Ignored characters behind commands --
#+end_src
#+begin_src ansys
  f $ fi $ fin $ fini $ finis  $ finish $ finisher
  a $ al $ all $ alls $ allse $ allsel $ allselllllll
  rectngaaaaa,var1,_X2,var2,X2 ! 2d rectangle
  !!
#+end_src
*** The End Of File command
#+begin_src  ansys :exports none
  !@@ -- End Of File command --
#+end_src
#+begin_src ansys
    /eof --- WARNING: /eof crashes the Ansys GUI in interactive mode ---
    /exit,nosave           !default is save the model data
  !!
#+end_src
*** Current element types and deprecated elements
#+begin_src ansys :exports none
  !@@ -- Current element types & deprecated elements
#+end_src
#+begin_src ansys
  !! A current element type:
  et,10,solid186
  !! deprecated element types:
  et,Steel,beam3 $ et,Alu,shell91
  !!
#+end_src
Let's change the element types to current ones!
#+begin_src ansys :tangle yes
  !! Complete the following element fragments to current ones!
  !!
  et,Steel,beam $ et,Alu,shell

#+end_src
For example select the following elements
#+begin_src ansys :tangle no
  et,Steel,beam188 $ et,Alu,shell28
#+end_src
and you are getting a diffent element highlighting.

#+begin_src ansys
  !@@ -- default commands
  nsel,s,loc,y,0
      ,a,loc,y,1
      ,r,loc,x,0
  d,all,all
#+end_src
** Implied (or colon) looping
#+begin_src ansys
  !@@ ::: implicit : (colon) looping :::::
  !! (n1:n2:dn)
  lfillt,(1:2),(3:4),5
  !! one subscript per array
  bf,(1:10),temp,Tarray(1:10)
  b(1:5) = 10,20,30,40,50 !TODO: creates this an array?
  !! The *get command and get functions are allowed
  *get,Fx(1:10),node,(1:10),f,fz !TODO:
  a(1:5) = nx(1:5)
  !! TODO:
  Fx(1:10) = (1:100:10)    !is this working? :-)
  !! alternative to *vfill
  *vfill,Fx,ramp,1,10
#+end_src

#+begin_src ansys
  !! looping
  ,*get,Dim
  ,*if,Dim,le,1,then
    *dim,Reaction,array,Ns,1
  ,*endif
  ,*do,I,1,Ns
    set,Ls,I
    fsum
    *get,Fx,fsum,,item,fx
    Reaction(I)=Fx
  ,*enddo
#+end_src
#+begin_src ansys
  !@@ -- multiline *msg formatting with the & operator
  *MSG,UI,Vcoilrms,THTAv,Icoilrms,THTAi,Papprnt,Pelec,PF,indctnc
  Coil RMS voltage, RMS current, apparent pwr, actual pwr, pwr factor: %/ &
  Steel = %G A (electrical angle = %G DEG) %/ &
  _Power factor: %G %/ &
  Inductance = %G %/ &
  VALUES ARE FOR ENTIRE COIL (NOT JUST THE MODELED SECTOR) 
#+end_src

* Introduction to the APDL
  - No function definitions <- write `command' files (.mac), or *use
  - no direct array to file export <- write command file for *vwrite,
    or use a (lookup) table for this purpose
  - still (v14) no round function there
#+begin_src ansys :exports none
  c***,**************************************************
  !@ --- Introduction to the APDL ---
  c******************************************************
  !! the comma behind `c***' is not necessary, one example of the many
  !! APDL peculiarities, which are not documented!
#+end_src
** Defining parameters
up to 5000
*** Double, char38, char8?, logical? TODO:
    in table only 8 chars?
    
*** Variable names (called `parameter' in the ANSYS manual)
All numeric values are stored as double precision values.  Not defined
variables are assigned a tiny value near zero.  The interpreter is not case sensitve
**** Must begin with a letter or an underscore
#+begin_src ansys
  1ansys = 3                    !is not a valid variable name
  a1nsys = 3                    !a1nsys is a valid variable name
  A1NSys = 4                    !this is the same variable
  A1NSys = Temp                 !`Temp' is not defined
#+end_src
    The following text is the respective ANSYS solver/interpreter output.
#+begin_src ansys-solver :tangle no
  BEGIN:
   1ansys = 3                    !is not a valid variable name
  PARAMETER 1ANSYS =     3.000000000    
  ,*** ERROR ***                           CP =       0.259   TIME= 18:06:41
  Invalid character in parameter name.                                    
   The setting of parameter= 1ANSYS is ignored.                           
  BEGIN:
   a1nsys = 3                    !a1nsys is a valid variable name
  PARAMETER A1NSYS =     3.000000000    
  BEGIN:
   A1NSys = 4                    !this is the same variable
  PARAMETER A1NSYS =     4.000000000    
  BEGIN:
   A1NSys = Temp                 !`Temp' is not defined
  ,*** WARNING ***                         CP =       0.260   TIME= 18:06:56
  Unknown parameter name= TEMP.  A value of 7.888609052E-31 will be used. 
  PARAMETER A1NSYS =    0.7888609052E-30
  BEGIN:
#+end_src
**** Should not begin with an underscore
    This convention is used in nameing variables in ANSYS supplied
    macros and the GUI.
#+begin_src ansys
  _ansys = 3   !`_ansys' represents a reserved variable in ANSYS supplied macros
  _ = 3        ! a single underscore definition is valid
  X = _
  _ = 3 !the single underscore represents  also a `variable' in APDL
#+end_src
**** Variable names with a trailing underscore
    These are hidden from the `*status' command output and can be
    deleted as a group with `*del'.
#+begin_src ansys
  ansys_ = 3              !this is a `hidden' variable from *status
  *status                 !does not show `ansys_'
         ,PRM_            !show variables with trailing underscore
  *del,,PRM_              !delete all variables with trailing underscore
#+end_src
#+begin_src ansys-solver :tangle no
     BEGIN:
    ansys_ = 3
     PARAMETER ANSYS_ =     3.000000000    
     BEGIN:
     *status
     ABBREVIATION STATUS-
      ABBREV    STRING
      SAVE_DB   SAVE
      RESUM_DB  RESUME
      QUIT      Fnc_/EXIT
      POWRGRPH  Fnc_/GRAPHICS
    
     PARAMETER STATUS-           (      5 PARAMETERS DEFINED)
                      (INCLUDING        4 INTERNAL PARAMETERS)
    
     NAME                              VALUE                        TYPE  DIMENSIONS
     X                                 3.00000000                    SCALAR
     BEGIN:
    ,PRM_
     PARAMETER STATUS- PRM_      (      5 PARAMETERS DEFINED)
                      (INCLUDING        4 INTERNAL PARAMETERS)
    
     NAME                              VALUE                        TYPE  DIMENSIONS
     ANSYS_                            3.00000000                    SCALAR
     BEGIN:
#+end_src
**** Must contain only letters, numbers and underscores
#+begin_src ansys
  !! only letters, numbers and underscores are allowed
  a1n§sys = 3              !this is not a valid variable name
  a1n_sys = 3              !this is a valid variable name
#+end_src
the ANSYS interpreter output looks like this:
#+begin_src ansys-solver :tangle no
  BEGIN:
   a1n§sys = 3              !this is not a valid variable name
  ,*** ERROR ***                           CP =       0.256   TIME= 17:35:07
  Invalid character in parameter name.                                    
   The setting of parameter= A1N§SYS is ignored.                         
  BEGIN:
   a1n_sys = 3              !this is a valid variable name
  PARAMETER A1N_SYS =     3.000000000    
  BEGIN:
#+end_src
**** Must contain no more than 32 characters    
#+begin_src ansys
  !! The following is not a valid variable name
  v23456789_123456789_123456789_123 = 3
  !! The following is a valid variable name
  v23456789_123456789_123456789_12  = 3
#+end_src
**** Local Variables
#+begin_src ansys
  Depth  =  ARG1 !ARG{1-9}, AR{10-19} = "*use" variables
  AR18 = AR19
  *stat,argx
#+end_src

*** Character strings
    Must not contain more than 32 characters
#+begin_src ansys
  ! character string variables are enclosed with `''
  Yc = '012345678901234567901234567890123' !not a character variable any more
  Symetry = 'yes'
#+end_src
** Erasing variables from memory
#+begin_src ansys
  !! defining
  Scalar = 3               !the `=' assignment is a shorthand for `*set'
  *set,Scalar,4            !reassignment
  *set,Vector,1,2,3,4,5,6,7,8,9,10
  Vector = 0,1,2,3,4,5,6,7,8,9,10,11,12 !TODO:
  Vector = 4               !TODO:
  !! deleting
  Scalar =     !this is not a variable any more
  *set,Scalar               !alternative to `Scalar ='
  *del,all                 !delete all variables!
  *del,Vector   !TODO:
#+end_src    

** Variable substitution with `%'
*** Substitution of Numeric Variables
In "string commands" like `/com', where a string follows the command
name one can force the substitution of a parameter name to its value.
Other examples are
#+begin_src ansys
  Steel = 1
  /com,Material %Steel% is steel
  !! ATTENTION: in the following situation!
  /com,%Steel% does NOT substitute variable Steel
  /com, %Steel% does substitute variable Steel
  /com,Stuff like %Steel+1% returns 2
#+end_src
*** Substitution of Character Variables
It is possible to substitute a command name
#+begin_src ansys
  R='RESUME'
  %R%,MODEL,DB
#+end_src
#+begin_src ansys
  !! string, message commands and comment behaviour && %$$% %% :bla: &&&
  
  /com, bla = %bla%
  igesin,'test','%iges%'
  /title,Nothing in %particular%
  !! in "string commands" are no code comments possible
  /com,beam3 %YES% ! this is *really not commented out!!!! &
  c*** *beam3 !otto *otto %neither% here !!!!!!! &
  /com, bearm laskf %otto% !%otto% we are here 
  
#+end_src
**** In certain `string commands'
~/title~ and ~/com~ are string commands similar to ~c***~ 
#+begin_src ansys
  right = 'wrong'
  /title, the value of right is  %right%
  /com, this is %right%: /com does expand parameters as well
#+end_src
**** Unfortunately here is no expansion possible
neither with ~c***~ nor with ~/sys~
#+begin_src ansys
  right = 9
  c***,this is %right%: c*** allows no parameter expansion
  /sys,ls "*.mac" %otto% &
  /syp,ls, %otto% !TODO: is this working?
#+end_src
   
*** Dynamic Substitution of Numeric or Character Variables
 or forced substitution (deferred)
#+begin_src ansys
  Case = 'case 1'
  /title,This is  %Case%
                           !/stitle
                           !*ask
                           !/tlabel
                           !/an3d
                           !in tables TODO:
  aplot
  Case = 'case 2'
  !! not necessary to reissue /title, "This is case 2"
  !! will appear on subsequent plots
  aplot
#+end_src    

** Expressions
*** Exponentiation Operator is `**'
*** Multiplication Expression
    Beware of the oldstyle ANSYS comment!
#+begin_src  ansys
var1 = sinh(cos(3 *5)) ! old style Ansys comment!!!!!
var2 = sinh(cos(3*5))  ! this is valid code
fini * comment
otto = 3 * 4 comment, the value of otto = 3!
!!
#+end_src
*** < >
#+begin_src ansys
otto = 1.82
karl = 1.97
margret =  otto < karl
maria = karl < otto
#+end_src    
** Arrays
   4 types: array, char of 8 characters, table and string 128 chars
*** Specifiying array element values
APDL Math works in its own workspace independent of the APDL
environment!
#+begin_src ansys
  No = 100
  Pi = acos(-1)
  Dat = cos(0:2*Pi:(2*Pi/No))+ cos(0:2*Pi*10:(2*Pi/No))
  Dat = 0:2*Pi:2*Pi/No
  *vfun
  *vec,import,apdl,Dat
  *fft,Forw,Dat,OutDat,,,Full !what's the difference?
  *fft,    ,Dat,OutDat,,,Part !what's the difference?
  *export,OutDat,apdl,APDLOutDat
#+end_src    
#+begin_src maxima

#+end_src
** debugging
#+begin_src ansys
  debug                    !TODO: undocumented?
#+end_src
** Multiple runs, probabilistic design
#+begin_src ansys
  PDEXE, Slab, MRUN, NFAIL, FOPT, Fname
  in V11: *mrun                    !TODO: 
#+end_src   
** Undocumented commands
#+begin_src ansys
  !undocumented commands are highlighted differently
  /xml                     !undocumented command /xml
  /xfrm                    !documented command   /xfrm
#+end_src

#+begin_src ansys
  !@@ --! multiline message format command this is tricky: use M-o M-o
  *MSG,UI,Vcoilrms,THTAv,Icoilrms,THTAi,Papprnt,Pelec,PF,indctnc
  Coil RMS voltage, RMS current, apparent pwr, actual pwr, pwr factor: %/ &
  Steel = %G A (electrical angle = %G DEG) %/ &
  _Power factor: %G %/ &
  Inductance = %G %/ &
  VALUES ARE FOR ENTIRE COIL (NOT JUST THE MODELED SECTOR)
  aldk this is not any longer in the *msg format construct
  /com this is not any longer in the *msg format construct
  
  *vwrite,B(1,1),B(2,1),%yes%
  alkd %D &
  %E%/%E
#+end_src
#+begin_src ansys
  !! commands which do not allow arguments
  /prep7 $ FINISH !$ means nothing behind
  /prep7 !still nothing behind
  /prep7 * old style comment, this is allowed
  /prep7 this is an error  
#+end_src
#+begin_src ansys
  nsel,s,loc,x,1
  nsel = 3  !you CAN have variable names clashing with commands
#+end_src

#+begin_src ansys
  !@@ -- Goto branching --
  *go,:branch
  aselsalsdkfjaölsdkfjaölskdjf,all
  :branch
#+end_src

#+begin_src ansys
  !-----------------------------------------------------------------------
  ! mdlbl.mac
  ! Puts Modal Info on Plot
  !-----------------------------------------------------------------------
  /post1
  set,last
  ,*get,nmd,active,,set,sbst
  pfct= $ ffrq= $ adir=
  nsel,s,l
  
  ,*dim,pfct,,nmd,6
      ,
      ,ffrq,,nmd
      ,adir,char,nmd
  
  
  adir(1) = 'X','Y','Z','ROTX','ROTY','ROTZ'
  ,*stat,adir
  ,*do,i,1,nmd
    *get,ffrq(i),mode,i,freq
    *do,j,1,6
      *get,pfct(i,j),mode,i,pfact,,direc,adir(j)
    *enddo
  ,*enddo
  /annot,delete
  /plopt,info,0
  /plopt,minm,off
  /triad,off
  /erase
  iadd = arg1
  ,*if,iadd,eq,0,then
    iadd = 1
  ,*endif
  /tspe,15,1,1,0,0
  /TSPE, 15, 1.000,   1,   0,   0
  xx = 1.05
  yy = .9
  !  Change the window settings if you need different 
  !  aspect ratios for your geometry
  /win,1,-1,1,.5,1
      ,2,-1,1,0,.5
      ,3,-1,1,-.5,0
      ,4,-1,1,-1,-.5
  !
  /win,2,off
  /win,3,off
  /win,4,off
  
  ,*get,vx,graph,1,view,x
  ,*get,vy,graph,1,view,y
  ,*get,vz,graph,1,view,z
  ,*get,va,graph,1,angle
  ,*get,vd,graph,1,dist
  ,*do,i,2,4
    /view,i,vx,vy,vz
    /dist,i,vd
    /angle,i,va
  ,*enddo
  
  ,*do,i,1,4
    ii = i - 1 + iadd 
    set,1,ii
    plnsol,u,sum
    *if,i,eq,1,then
      /noerase
    *endif
    /win,i,off
    *if,i,ne,4,then
      /win,i+1,on
    *endif
  ,*enddo
  ,*do,i,1,4
    ii = i - 1 + iadd
    /TLAB, xx, yy  ,Mode: %ii%
    yy = yy - .05
    /TLAB, xx, yy,Freq: %ffrq(ii)%
    yy = yy - .05
    *do,j,1,6
      /TLAB, xx, yy  ,PF %adir(j)%: %pfct(ii,j)%
      yy = yy - .05
    *enddo
     yy = yy -.11
  ,*enddo
  /erase
  /annot,delete
  sz = .8
  xloc = 0
  yloc = 0
  
  ,*dim,data,,5
  data(1) = 12,15,28,10,32
  hsz = sz/2
  
  /pspec,0,1,1
  /poly,4,xloc-hsz,yloc-hsz,1.8*(xloc+hsz),yloc-hsz,
           1.8*(xloc+hsz),yloc+hsz,xloc-hsz,yloc+hsz
  
  x0 = xloc + hsz
  y0 = yloc + .7*hsz
  lof = .05
  
  ,*vscfun,dsum,sum,data(1)
  /LSPE, 15, 0, 1.000
  /TSPEC, 15, 0.700, 1, 0, 0
  ang1 = 0
  ,*do,i,1,5
    ang2 = ang1 + (360*data(i)/dsum) 
    /PSPE, 2*i, 1, 1 
    /PWED, xloc,yloc,sz*.4, ang1,ang2 
    /poly,4,x0,y0,x0+lof,y0,x0+lof,y0+lof,x0,y0+lof 
    pvl = 100*data(i)/dsum 
    /tlab, x0+1.5*lof,y0, %pvl% % 
  
    y0 = y0 - 1.5*lof 
    ang1 = ang2
  ,*enddo
  /eof
#+end_src

file:/usr/local/ansys_inc/v130/commonfiles/help/en-us/help/ans_cmd/Hlp_C_GET.html 
