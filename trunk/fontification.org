# -*- mode: org -*-
#+TITLE:  Tutorial
######################################################################
#+AUTHOR:    H. Dieter Wilhelm
#+EMAIL:     dieter@duenenhof-wilhelm.de
##+DATE:      2012-06-17 Sa
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  en
#+OPTIONS:   email:t H:5 num:nil toc:1 \n:nil @:t ::t |:t ^:nil -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:t skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+INFOJS_OPT: view:nil toc:t ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_UP:   
#+LINK_HOME: 
#+XSLT:
#+PROPERTY: tangle yes
#+LaTeX_CLASS: koma-report
##+LaTeX_CLASS: koma-article
##+LATEX: \tableofcontents
#+LATEX_HEADER: \usepackage{scrpage2}
#+LATEX_HEADER: \titlehead{\includegraphics[width=15cm]{ansys+emacs.png}}
#+LATEX_HEADER: \subject{ANSYS-Mode}
#+LATEX_HEADER: \subtitle{APDL and Syntax Highlighting}
#+LATEX_HEADER:\areaset{15cm}{25cm} %textarea on page
#+LATEX_HEADER:\pagestyle{scrheadings}
#+LATEX_HEADER:\ifoot{\author}
#+LATEX_HEADER:\ofoot{\includegraphics[width=3cm]{ansys+emacs.png}}

##+TEXT: This is still a work in progress, good documentation is hard work!
##+TEXT: Please report remaining faults.

* ANSYS-Mode Syntax Highlighting Tutorial
** TODO Merge fontification.org with APDL_tutorial.org


#+BEGIN_LaTeX
  \definecolor{dkgreen}{rgb}{0,0.5,0}
  \definecolor{dkred}{rgb}{0.5,0,0}
  \definecolor{gray}{rgb}{0.5,0.5,0.5}
  \lstset{frame=none, %leftline
    basicstyle=\ttfamily\bfseries\footnotesize,
    morekeywords={virtualinvoke},
    keywordstyle=\color{dkgreen},
    ndkeywordstyle=\color{red},
    commentstyle=\color{dkred},
    stringstyle=\color{orange},
%   numbers=left,
%    numberstyle=\ttfamily\tiny\color{gray},
%    stepnumber=1,
%    numbersep=10pt,
    backgroundcolor=\color{white},
    tabsize=4,
 %   showspaces=false,
%    showstringspaces=false,
    xleftmargin=.23in
  }

\lstdefinelanguage{ansys}
  {
  morecomment=[l]{!},
  morecomment=[l]{\ *}, % olds style comments
  morestring=[b]',
  sensitive=false,
  morekeywords={nsel,et,mp,block,d,vmesh,allsel,save,solve,plnsol,finish,
     aplot,eplot,igesin,set,lfillt},
  otherkeywords={*MSG,*if,*do,*enddo,*dowhile,*create,*end,*endif,/title,/com,
    /units,/prep7,/solu,/post1,/post26,/eof,/image,/sys,*afun,/view,c***,*get,
   *msg,/xfr,*vwrite,*go,*dim,*stat,/annot,/plopt,/triad,/erase,/tspe,/win,
   /tlab,/erase,/annot,/pspe,/pwed,/poly,*vscfun,/tlab},
}

#+END_LaTeX  
   
** Header
#+begin_src ansys
  !! ------------------------------
  !@ --- header ---
  !! ------------------------------
  !! Time-stamp: <2012-06-22 16:42:24 uidg1626>
  !! NOTE: This is pseudo code, checking
  !!  ANSYS-Mode's highlighting and its
  !!  ansys-highlighting-level.  Please put the
  !!  the cursor below the next paragraph and type
  !!  C-x C-e to activate the settings
#+end_src

#+begin_src  ansys
/units,mpa !indicate mm-t-s unit system
!@ --- Preprocessing ---
/prep7
!@@ -- Elements --
Steel = 1
ID = Steel
real = Steel
et,ID,solid186 !3d, 20 node
!@@ -- Material --
mp,nuxy,Steel,0.3 ! Poisson No
mp,ex,Steel,200000 ! Elastic modulus
!@@ -- Modeling --
block,0,1,0,1,0,1
!@@ -- Meshing --
vmesh,all
!@@ -- BCs, Loads --
nsel,s,loc,x,0
d,all,all
nsel,s,loc,x,1
d,all,uy,-.1
allsel
save
!@ --- Solving ---
/solu
solve
!@ --- Postprocessing --
/post1
/view,,1,1,1
plnsol,u,sum,2
/image,save,test !save XWindow Dump xwd (or bmp on Windows)
/sys,convert test test.png
#+end_src

#+begin_src ansys
  !!  Please put the the cursor below the next paragraph of emacs lisp
  !!  code and type "C-x C-e" to change the setting of
  !!  `ansys-highlighting-level' and `ansys-dynamic-highlighting-flag'
  !!  change the level from 0 to 2 and toggle the flag from `t' to
  !!  `nil'.  Browse the file to check the differences.
#+end_src

#+begin_src lisp
  (progn
    (when
        (featurep 'ansys-mode)
      (unload-feature 'ansys-mode))
    (setq
     ansys-highlighting-level 2
     ansys-dynamic-highlighting-flag t)
    (load-file "ansys-mode.el")
    (ansys-mode))
#+end_src


!! ------------------------------
/units,mpa !indicate mm-t-s unit system
c
#+begin_src ansys
!@@ -- Ignored characters and condensed input line ($ operator)
  finishThisNightmare $ /cle !/clear
  f $ fi $ fin $ fini $ finis  $ finish $ finisher
#+end_src
** Parameter expansion with `%'
#+begin_src ansys
  Steel = 1
  mp, nuxy,Steel,0.3 ! Poisson No
  mp, ex,Steel,200000 ! Elastic modulus
  !@@ -- Parameter expansion with `%' --
  /com, === Material %Steel% is from steel. ===
  
  ,*afun,rad
  /fil $ /filname%bla% 
  !! string, message commands and comment behaviour && %$$% %% :bla: &&&
  
  /com, bla = %bla%
  igesin,'test','%iges%'
  /title,Nothing in %particular%
  /com,beam3 %YES% ! this is *really not commented out!!!! &
  c*** *beam3 !otto *otto %neither% here !!!!!!! &
  /com, bearm laskf %otto% !%otto% we are here 
  
  nsel,s,%bla%
  
#+end_src
*** In `string commands'
~/title~ and ~/com~ are string commands similar to ~c***~ 
#+begin_src ansys
  /title, the value of right is  %right%
  /com, this is %right%: /com does expand parameters as well
#+end_src
*** No expansion
neither with ~c***~ nor with ~/sys~
#+begin_src ansys
  right = 9
  c***,this is %right%: c*** allows no parameter expansion
  /sys,ls "*.mac" %otto% &
#+end_src

** Highlighting APDL specials
TODO! for this tutorial: Colour the code snippets. 
#+begin_src  ansys :exports none
!@ --- ANSYS-Mode is highlighting APDL specials ---
#+end_src
*** Reserved words and _RETURN statements
#+begin_src ansys :exports none
!@@ -- Reserved words and _RETURN statements --
#+end_src
#+begin_src ansys
  !!
  N      =  _RETURN       !return value of certain commands
  Alpha2 =  +360./(2*N)
  Xc     =  !empty rhs clears variables
#+end_src
***  Old style APDL comments
#+begin_src ansys :exports none
!@@ -- Old style APDL comments --
#+end_src
#+begin_src  ansys
var1 = sinh(cos(3 *5)) ! old style Ansys comment!!!!!
var2 = sinh(cos(3*5))  ! this is valid code
fini * comment
otto = 3 * 4 comment, the value of otto = 3!
!!
#+end_src
*** Ignored characters behind commands
#+begin_src ansys :exports none
!@@ -- Ignored characters behind commands --
#+end_src
#+begin_src  ansys
f $ fi $ fin $ fini $ finis  $ finish $ finisher
!!
#+end_src
*** The End Of File command
#+begin_src  ansys :exports none
!@@ -- End Of File command --
#+end_src
#+begin_src  ansys
/eof --- WARNING: /eof crashes the Ansys GUI in interactive mode ---
!!
#+end_src

#+begin_src ansys
  !@@ -- function names --
  Pi=acos(-1) $ True=1 $ False=0 $ Nn=3.1
  Alpha1 = rotx( 14.5) - 360./ (2*Nn)
#+end_src


*** Ignored characters behind commands
#+begin_src ansys :exports none
!@@ -- Ignored characters behind commands --
#+end_src
#+begin_src ansys
  f $ fi $ fin $ fini $ finis  $ finish $ finisher
  a $ al $ all $ alls $ allse $ allsel $ allselllllll
  rectngaaaaa,var1,_X2,var2,X2 ! 2d rectangle
  !!
#+end_src
*** The End Of File command
#+begin_src  ansys :exports none
  !@@ -- End Of File command --
#+end_src
#+begin_src  ansys
  /eof --- WARNING: /eof crashes the Ansys GUI in interactive mode ---
!!
#+end_src
*** Current element types and deprecated elements
#+begin_src ansys :exports none
  !@@ -- Current element types & deprecated elements
#+end_src
#+begin_src ansys
  !! A current element type:
  et,10,solid186
  !! deprecated element types:
  et,Steel,beam3 $ et,Alu,shell91
  !!
#+end_src
Let's change the element types to current ones!
#+begin_src ansys :tangle yes
  !! Complete the following element fragments to current ones!
  !!
  et,Steel,beam $ et,Alu,shell

#+end_src
For example select the following elements
#+begin_src ansys :tangle no
  et,Steel,beam188 $ et,Alu,shell28
#+end_src
and you are getting a diffent element highlighting.

#+begin_src ansys
  !@@ -- default commands
  nsel,s,loc,y,0
      ,a,loc,y,1
      ,r,loc,x,0
  d,all,all
#+end_src
** implicit or colon looping
#+begin_src  ansys
  !@@ ::: implicit : (colon) looping :::::
  lfillt,(1:2),(3:4),5
#+end_src

#+begin_src ansys
  !! looping
  ,*get,Dim
  ,*if,Dim,le,1,then
    *dim,Reaction,array,Ns,1
  ,*endif
  ,*do,I,1,Ns
    set,Ls,I
    fsum
    *get,Fx,fsum,,item,fx
    Reaction(I)=Fx
  ,*enddo
#+end_src
#+begin_src ansys
  !@@ -- multiline *msg formatting with the & operator
  *MSG,UI,Vcoilrms,THTAv,Icoilrms,THTAi,Papprnt,Pelec,PF,indctnc
  Coil RMS voltage, RMS current, apparent pwr, actual pwr, pwr factor: %/ &
  Steel = %G A (electrical angle = %G DEG) %/ &
  _Power factor: %G %/ &
  Inductance = %G %/ &
  VALUES ARE FOR ENTIRE COIL (NOT JUST THE MODELED SECTOR) 
#+end_src

** Variable (called parameters in APDL) names
*** Must begin with a letter or an underscore
#+begin_src ansys
  1ansys = 3			!is not a valid variable name
  a1nsys = 3			!a1nsys is a valid variable name
#+end_src
*** Should not begin with an underscore
    This convention is used in nameing variables in ANSYS supplied
    macros and the GUI.
#+begin_src ansys
  _ansys = 3   !`_ansys' represents a reserved variable
#+end_src
      
*** Must contain only letters, numbers and underscores
#+begin_src ansys
  a1nÂ§sys = 3              !this is not a valid variable name
  a1n_sys = 3              !this is
#+end_src
*** Must contain no more than 32 characters    
#+begin_src ansys
  !! The following is not a valid variable name
  v23456789_123456789_123456789_123 = 3
  !! The following is a valid variable name
  v23456789_123456789_123456789_12  = 3
#+end_src
*** Variable names with a trailing underscore
    These are hidden from the `*status' command output and can be
    deleted as a group with `*del'.
#+begin_src ansys
 ansys_ = 3  !this is a `hidden' variable from *status
 *status,ansys_ !TODO: ?
 *del !TODO: how to delete a group
#+end_src
*** Erasing variables from memory
#+begin_src ansys 
  ansys =
  *set,ansys
  *del, !TODO:
#+end_src    
*** Character variables
    Must not contain more than 8 characters
#+begin_src ansys
  ! character string variables
  Yc = 'char'
  False = 0$True =1 $ Yes = 'no'
#+end_src
    
#+begin_src ansys
  Depth  =  ARG1 !ARG{1-9}, AR{10-19} = "*use" variables
#+end_src

#+begin_src ansys
  !undocumented commands are highlighted differently
  /xml                     !undocumented command /xml
  /xfr                     !  documented command /xfrm
#+end_src

#+begin_src ansys
  !@@ --! multiline message format command this is tricky: use M-o M-o
  ,*MSG,UI,Vcoilrms,THTAv,Icoilrms,THTAi,Papprnt,Pelec,PF,indctnc
  Coil RMS voltage, RMS current, apparent pwr, actual pwr, pwr factor: %/ &
  Steel = %G A (electrical angle = %G DEG) %/ &
  _Power factor: %G %/ &
  Inductance = %G %/ &
  VALUES ARE FOR ENTIRE COIL (NOT JUST THE MODELED SECTOR)
  aldk this is not any longer in the *msg format construct
  /com this is not any longer in the *msg format construct
  
  ,*vwrite,B(1,1),B(2,1),%yes%
  alkd %D &
  %E%/%E
#+end_src
#+begin_src ansys
  !! commands which do not allow arguments
  /prep7 $ FINISH !$ means nothing behind
  /prep7 !still nothing behind
  /prep7 * old style comment, this is allowed
  /prep7 this is an error  
#+end_src
#+begin_src ansys
  nsel,s,loc,x,1
  nsel = 3  !you CAN have variable names clashing with commands
#+end_src

#+begin_src ansys
  !@@ -- Goto branching --
  *go,:branch
  aselsalsdkfjaÃ¶lsdkfjaÃ¶lskdjf,all
  :branch
#+end_src

#+begin_src ansys
  !-----------------------------------------------------------------------
  ! mdlbl.mac
  ! Puts Modal Info on Plot
  !-----------------------------------------------------------------------
  /post1
  set,last
  *get,nmd,active,,set,sbst
  pfct= $ ffrq= $ adir=
  nsel,s,l
  
  *dim,pfct,,nmd,6
      ,
      ,ffrq,,nmd
      ,adir,char,nmd
  
  
  adir(1) = 'X','Y','Z','ROTX','ROTY','ROTZ'
  *stat,adir
  *do,i,1,nmd
    *get,ffrq(i),mode,i,freq
    *do,j,1,6
      *get,pfct(i,j),mode,i,pfact,,direc,adir(j)
    *enddo
  *enddo
  /annot,delete
  /plopt,info,0
  /plopt,minm,off
  /triad,off
  /erase
  iadd = arg1
  *if,iadd,eq,0,then
    iadd = 1
  *endif
  /tspe,15,1,1,0,0
  /TSPE, 15, 1.000,   1,   0,   0
  xx = 1.05
  yy = .9
  !  Change the window settings if you need different 
  !  aspect ratios for your geometry
  /win,1,-1,1,.5,1
      ,2,-1,1,0,.5
      ,3,-1,1,-.5,0
      ,4,-1,1,-1,-.5
  !
  /win,2,off
  /win,3,off
  /win,4,off
  
  *get,vx,graph,1,view,x
  *get,vy,graph,1,view,y
  *get,vz,graph,1,view,z
  *get,va,graph,1,angle
  *get,vd,graph,1,dist
  *do,i,2,4
    /view,i,vx,vy,vz
    /dist,i,vd
    /angle,i,va
  *enddo
  
  *do,i,1,4
    ii = i - 1 + iadd 
    set,1,ii
    plnsol,u,sum
    *if,i,eq,1,then
      /noerase
    *endif
    /win,i,off
    *if,i,ne,4,then
      /win,i+1,on
    *endif
  *enddo
  *do,i,1,4
    ii = i - 1 + iadd
    /TLAB, xx, yy  ,Mode: %ii%
    yy = yy - .05
    /TLAB, xx, yy,Freq: %ffrq(ii)%
    yy = yy - .05
    *do,j,1,6
      /TLAB, xx, yy  ,PF %adir(j)%: %pfct(ii,j)%
      yy = yy - .05
    *enddo
     yy = yy -.11
  *enddo
  /erase
  /annot,delete
  sz = .8
  xloc = 0
  yloc = 0
  
  *dim,data,,5
  data(1) = 12,15,28,10,32
  hsz = sz/2
  
  /pspec,0,1,1
  /poly,4,xloc-hsz,yloc-hsz,1.8*(xloc+hsz),yloc-hsz,
           1.8*(xloc+hsz),yloc+hsz,xloc-hsz,yloc+hsz
  
  x0 = xloc + hsz
  y0 = yloc + .7*hsz
  lof = .05
  
  *vscfun,dsum,sum,data(1)
  /LSPE, 15, 0, 1.000
  /TSPEC, 15, 0.700, 1, 0, 0
  ang1 = 0
  *do,i,1,5
    ang2 = ang1 + (360*data(i)/dsum) 
    /PSPE, 2*i, 1, 1 
    /PWED, xloc,yloc,sz*.4, ang1,ang2 
    /poly,4,x0,y0,x0+lof,y0,x0+lof,y0+lof,x0,y0+lof 
    pvl = 100*data(i)/dsum 
    /tlab, x0+1.5*lof,y0, %pvl% % 
  
    y0 = y0 - 1.5*lof 
    ang1 = ang2
  *enddo
  /eof
#+end_src
